openapi: 3.1.0
info:
  title: Cascade CMS API Library
  version: 1.0.0
  license:
    name: MIT License
    url: https://github.com/kuklaph/cascade-cms-api/blob/main/LICENSE
  contact:
    name: Official Cascade Rest API Documentation
    url: "https://www.hannonhill.com/cascadecms/latest/developing-in-cascade/rest-api/index.html"
  description: |
    *This was created by [Kuklaph](https://github.com/kuklaph) and is not an official Cascade API document. I do not claim to own any rights of Hannon Hill or Cascade in anyway.*

    The WSDL was initially converted to JSDoc types (for usage in the Cascade CMS API Library) and then converted to openAPI specs.

    This documentation is based on the [Cascade CMS API Library](https://github.com/kuklaph/cascade-cms-api) which only uses POST requests.

    - The Authentication parameter is implied with the usage of the library.
    - I have included the authentication parameter in the documentation, but it is not necessary when using the library.
    - Other authentication methods are shown for completeness.

    If you come across a bug please create an [issue](https://github.com/kuklaph/cascade-cms-api/issues).

    ### Snippet From Official Cascade REST Documentation

    Though the Cascade CMS v1 REST APi does not exactly follow RESTful API conventions, it is similar enough to be called so.
    The supported methods are "GET" and "POST". The name of the operation should be included in the URL.
    The request and response are in JSON format that resembles format of SOAP objects from Cascade CMS's Web Services.
    Future version of the API may adhere more closely to REST.

    **Symbols in this document**

    {identifier}

    Either:
      - End of URL string for POST or GET requests: `{type}/{id}`. Example: `folder/2b2fd9bc7f0000010044b22e65131cd3`
      - End of URL string for POST or GET requests: `{type}/{siteName}/{path}`. \
        Example: `page/www.example.com/news/2003/best-of-show`
      - The identifier can also be provided in body in JSON format for POST requests only. \
        Example:
        ```json
        "identifier": {
          "type": "page",
          "path": {
            "siteId": "2b2fd9a67f0000010044b22e4f6b0859",
            "path": "news/2003/about"
          }
        }
        ```
        Notice that providing a site id for the identifier is not possible in a URL string.

    {auth}

    Either:
      - The user's API Key can be provided within the request's Authorization header as a Bearer token.
        Example: `Authorization: Bearer 27c03f58-7c79-45d1-aa8f-76d697bbb10d`
      - The user's username and password can be provided within the request's Authorization header using a Basic authentication string, which is a base64-encoded string containing `username:password`.
        Example: `Authorization: Basic am9obi5zbWl0aDpqb2huMTIz`
      - Request parameters `u` and `p` for username and password, or `apiKey` for the user's API Key. \
        Examples: `u=john.smith&p=john123` OR `apiKey=27c03f58-7c79-45d1-aa8f-76d697bbb10d`
      - Authentication can also be provided in body in JSON format for POST requests only. \
        Examples:
          ```json
          "authentication": {
            "username": "john.smith",
            "password": "john123"
          }
          ```
          ```json
          "authentication": {
            "apiKey": "27c03f58-7c79-45d1-aa8f-76d697bbb10d"
          }
          ```
tags:
  - name: Examples
    description: Various ways to interact with the API
  - name: POST Only
    description: These interact with POST and a Bearer API Key

servers:
  - url: "https://{yourOrg}.cascadecms.com/api/v1"
    variables:
      yourOrg:
        default: "demo"
        description: "Your organization identifier in Cascade CMS"

security:
  - BasicAuth: []
  - ApiKeyAuth: []

components:
  securitySchemes:
    BasicAuth: # HTTP Basic Authentication
      type: http
      scheme: basic
    ApiKeyAuth: # API Key Authentication
      type: http
      scheme: bearer
  schemas:
    Authentication:
      type: object
      description: Unless an apiKey is provided, both username and password are REQUIRED.
      properties:
        password:
          type: string
          description: User's password
        username:
          type: string
          description: User's username
        apiKey:
          type: string
          description: User's API key
      required:
        - username
        - password
    BaseAsset:
      type: object
      description: |
        - All assets inherit from base asset.
        - The id of the asset. When creating, this should not be present as an asset does not have an id until it is created. When editing, specify this to uniquely identify an asset.
      properties:
        id:
          type: string
          description: |
            - The id of the asset. When creating, this should not be present as an asset does not have an id until it is created. When editing, specify this to uniquely identify an asset.

    NamedAssetProperties:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED on create, ignored on edit. Use move operation to rename an asset.
      required:
        - name

    NamedAsset:
      allOf:
        - $ref: "#/components/schemas/BaseAsset"
        - $ref: "#/components/schemas/NamedAssetProperties"
      description: All assets have a name

    Tags:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: Value of tag string.
      required:
        - name

    FolderContainedAssetProperties:
      type: object
      properties:
        parentFolderId:
          type: string
          description: |
            - REQUIRED: on create, ignored on edit: The parent folder relationship.
            - Priority: parentFolderId > parentFolderPath.
            - One is REQUIRED.
        parentFolderPath:
          type: string
          description: |
            - REQUIRED: on create, ignored on edit.
        path:
          type: string
          description: |
            - NOT REQUIRED: The path of an asset.
        lastModifiedDate:
          type: string
          description: |
            - NOT REQUIRED: When this asset was last modified.
            - Read only.
          readOnly: true
        lastModifiedBy:
          type: string
          description: |
            - NOT REQUIRED: Who last modified this asset.
            - Read only.
          readOnly: true
        createdDate:
          type: string
          description: |
            - NOT REQUIRED: When this asset was created.
            - Read only.
          readOnly: true
        createdBy:
          type: string
          description: |
            - NOT REQUIRED: Who created this asset.
            - Read only.
          readOnly: true
        siteId:
          type: string
          enum: [inherit, absolute, relative, site-relative]
          description: |
            - One is REQUIRED: The Site in which the asset is located.
        siteName:
          type: string
          description: One is REQUIRED.
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tags"
          description: |
            - NOT REQUIRED: Content Tags assigned to the asset.
      anyOf:
        - required:
            - parentFolderId
            - parentFolderPath
        - required:
            - siteId
            - siteName

    FolderContainedAsset:
      allOf:
        - $ref: "#/components/schemas/NamedAsset"
        - $ref: "#/components/schemas/FolderContainedAssetProperties"
      description: Representing all home-area assets that are contained in a folder

    Metadata:
      type: object
      description: |
        - The content of the wired metadata fields.
        - None of the fields are required and the defaults are empty.
      properties:
        author:
          type: string
          description: |
            - NOT REQUIRED:
        displayName:
          type: string
          description: |
            - NOT REQUIRED:
        endDate:
          type: string
          description: |
            - NOT REQUIRED:
        keywords:
          type: string
          description: |
            - NOT REQUIRED:
        metaDescription:
          type: string
          description: |
            - NOT REQUIRED:
        reviewDate:
          type: string
          description: |
            - NOT REQUIRED:
        startDate:
          type: string
          description: |
            - NOT REQUIRED:
        summary:
          type: string
          description: |
            - NOT REQUIRED:
        teaser:
          type: string
          description: |
            - NOT REQUIRED:
        title:
          type: string
          description: |
            - NOT REQUIRED:
        dynamicFields:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  - REQUIRED.
              fieldValues:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      description: |
                        - NOT REQUIRED:
            required:
              - name
          description: |
            - NOT REQUIRED: Array

    DublinAwareAssetProperties:
      type: object
      description: |
        - NOT REQUIRED: The individual wired metadata fields. | default: all empty.
      properties:
        metadata:
          $ref: "#/components/schemas/Metadata"
        metadataSetId:
          type: string
          description: |
            - NOT REQUIRED: For defining the metadata set relationship.
            - Priority: metadataSetId > metadataSetPath
        metadataSetPath:
          type: string
          description: |
            - NOT REQUIRED: For defining the metadata set relationship.
            - Priority: metadataSetId > metadataSetPath
        reviewOnSchedule:
          type: boolean
          description: NOT REQUIRED
        reviewEvery:
          type: number
          description: NOT REQUIRED

    DublinAwareAsset:
      allOf:
        - $ref: "#/components/schemas/FolderContainedAsset"
        - $ref: "#/components/schemas/DublinAwareAssetProperties"
      description: End types that extend containered-asset.

    ExpiringAssetProperties:
      type: object
      description: |
        - An asset that can expire and be moved to an expiration folder.
      properties:
        expirationFolderId:
          type: string
          description: |
            - NOT REQUIRED: When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin.
            - Priority: expirationFolderId > expirationFolderPath
        expirationFolderPath:
          type: string
          description: |
            - NOT REQUIRED: Path works only for non-recycled assets.
        expirationFolderRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc.

    ExpiringAsset:
      allOf:
        - $ref: "#/components/schemas/DublinAwareAsset"
        - $ref: "#/components/schemas/ExpiringAssetProperties"
      description: An asset that can expire and be moved to an expiration folder.

    LinkRewriting:
      type: string
      enum:
        - inherit
        - absolute
        - relative
        - site-relative

    PublishableAssetProperties:
      type: object
      description: |
        - NOT REQUIRED: default: true.
        - Whether or not this asset can be published.
      default: true
      properties:
        shouldBePublished:
          type: boolean
          description: |
            - NOT REQUIRED: default: true.
            - Whether or not this asset can be published.
          default: true
        shouldBeIndexed:
          type: boolean
          description: |
            - NOT REQUIRED: default: true.
            - Whether or not this asset can be indexed.
          default: true
        lastPublishedDate:
          type: string
          description: |
            - NOT REQUIRED:
            - The last date this asset was published.
        lastPublishedBy:
          type: string
          description: |
            - NOT REQUIRED:
            - Who last published this asset.

    PublishableAsset:
      allOf:
        - $ref: "#/components/schemas/ExpiringAsset"
        - $ref: "#/components/schemas/PublishableAssetProperties"

    EntityTypeString:
      type: string
      enum:
        - assetfactory
        - assetfactorycontainer
        - block
        - block_FEED
        - block_INDEX
        - block_TEXT
        - block_XHTML_DATADEFINITION
        - block_XML
        - block_TWITTER_FEED
        - connectorcontainer
        - twitterconnector
        - facebookconnector
        - wordpressconnector
        - googleanalyticsconnector
        - contenttype
        - contenttypecontainer
        - destination
        - editorconfiguration
        - file
        - folder
        - group
        - message
        - metadataset
        - metadatasetcontainer
        - page
        - pageconfigurationset
        - pageconfiguration
        - pageregion
        - pageconfigurationsetcontainer
        - publishset
        - publishsetcontainer
        - reference
        - role
        - datadefinition
        - datadefinitioncontainer
        - sharedfield
        - sharedfieldcontainer
        - format
        - format_XSLT
        - format_SCRIPT
        - site
        - sitedestinationcontainer
        - symlink
        - target
        - template
        - transport
        - transport_fs
        - transport_ftp
        - transport_db
        - transport_cloud
        - transportcontainer
        - user
        - workflow
        - workflowdefinition
        - workflowdefinitioncontainer
        - workflowemail
        - workflowemailcontainer
      description: |
        - All asset type strings

    Path:
      type: object
      properties:
        path:
          type: string
          description: |
            - When reading a site, the "path" element should be populated with the site's name.
        siteId:
          type: string
          description: |
            - NOT REQUIRED:
        siteName:
          type: string
          description: |
            - NOT REQUIRED:
      required:
        - path

    Identifier:
      type: object
      properties:
        id:
          type: string
          description: |
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin.
            - One is REQUIRED.
        path:
          $ref: "#/components/schemas/Path"
        type:
          $ref: "#/components/schemas/EntityTypeString"
          description: |
            - REQUIRED. All asset type strings.
        recycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc.
      required:
        - type
      oneOf:
        - required:
            - id
            - path

    ContainerChildren:
      allOf:
        - $ref: "#/components/schemas/Identifier"

    StructuredDataNode:
      type: object
      description: |
        - A single structured data node.
      properties:
        type:
          type: string
          enum: ["text", "asset", "group"]
          description: |
            - REQUIRED: Each node has a type.
        identifier:
          type: string
          description: |
            - REQUIRED: The text identifier of the node coming from corresponding field in Data Definition.
            - If this node is preserved on the asset but the corresponding field no longer exists in Data Definition, the identifier's value will be "\<legacy\>".
        structuredDataNodes:
          type: array
          items:
            $ref: "#/components/schemas/StructuredDataNodes"
          description: |
            - NOT REQUIRED: An array of structured data nodes.
        text:
          type: string
          description: |
            - REQUIRED if type is 'text'.
        assetType:
          type: string
          enum: ["block", "file", "page", "symlink", "page,file,symlink"]
          description: |
            - REQUIRED if type is 'asset'.
        blockId:
          type: string
          description: |
            - NOT REQUIRED: Priority: blockId > blockPath.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
            - The block assigned to this page region.
        blockPath:
          type: string
          description: |
            - NOT REQUIRED: Priority: blockId > blockPath.
            - Path works only for non-recycled assets.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
            - The block assigned to this page region.
        fileId:
          type: string
          description: |
            - NOT REQUIRED:
            - If assetType=file, one of fileId or filePath should be provided if an asset is selected for this node.
            - If assetType=linkable, fileId or filePath should be populated if the selected linkable asset is a file.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        filePath:
          type: string
          description: |
            - NOT REQUIRED:
            - Path works only for non-recycled assets.
            - If assetType=file, one of fileId or filePath should be provided if an asset is selected for this node.
            - If assetType=linkable, fileId or filePath should be populated if the selected linkable asset is a file.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        pageId:
          type: string
          description: |
            - NOT REQUIRED:
            - If assetType=page, one of pageId or pagePath should be provided if an asset is selected for this node.
            - If assetType=linkable, pageId or pagePath should be populated if the selected linkable asset is a page.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        pagePath:
          type: string
          description: |
            - NOT REQUIRED:
            - Path works only for non-recycled assets.
            - If assetType=page, one of pageId or pagePath should be provided if an asset is selected for this node.
            - If assetType=linkable, pageId or pagePath should be populated if the selected linkable asset is a page.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        symlinkId:
          type: string
          description: |
            - NOT REQUIRED:
            - If assetType=symlink, one of symlinkId or symlinkPath should be provided if an asset is selected for this node.
            - If assetType=linkable, symlinkId or symlinkPath should be populated if the selected linkable asset is a symlink.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        symlinkPath:
          type: string
          description: |
            - NOT REQUIRED:
            - Path works only for non-recycled assets.
            - If assetType=symlink, one of symlinkId or symlinkPath should be provided if an asset is selected for this node.
            - If assetType=linkable, symlinkId or symlinkPath should be populated if the selected linkable asset is a symlink.
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case the selected asset gets restored from the recycle bin.
        recycled:
          type: string
          description: |
            - NOT REQUIRED:
            - Use for reading only - this attribute is not necessary when editing or creating and will not affect these operations if provided.
            - If a path is provided, Cascade will look only for a non-recycled asset with the given path, even if 'recycled=true' is provided.
      required:
        - type
        - identifier

    StructuredDataNodes:
      allOf:
        - $ref: "#/components/schemas/StructuredDataNode"
      description: |
        - An array of structured data nodes.

    StructuredData:
      type: object
      properties:
        definitionId:
          type: string
          description: |
            - NOT REQUIRED: Id of the Data Definition block. Priority: definitionId > definitionPath.
        definitionPath:
          type: string
          description: |
            - NOT REQUIRED: Path of the Data Definition block. Priority: definitionId > definitionPath.
        structuredDataNodes:
          type: array
          items:
            $ref: "#/components/schemas/StructuredDataNodes"
          description: |
            - The structured data nodes that make up the structured data.
      description: |
        - Page structured data information.

    SerializationType:
      type: string
      enum:
        - "HTML"
        - "XML"
        - "PDF"
        - "RTF"
        - "JSON"
        - "JS"
        - "CSS"
      description: |
        - The various serialization types for a target.

    PageConfigurationProperties:
      type: object
      description: |
        - A single page configuration's name, such as "XML" or "Full HTML".
      properties:
        name:
          type: string
          description: |
            - REQUIRED: A single page configuration's name, such as 'XML' or 'Full HTML'.
        defaultConfiguration:
          type: boolean
          description: |
            - REQUIRED: Whether or not this is the default configuration.
        templateId:
          type: string
          description: |
            - NOT REQUIRED: The template for this configuration. Priority: templateId > templatePath.
        templatePath:
          type: string
          description: |
            - NOT REQUIRED: The template for this configuration. Priority: templateId > templatePath.
        formatId:
          type: string
          description: |
            - NOT REQUIRED: The overall XSLT format applied to this page configuration. Priority: formatId > formatPath.
        formatPath:
          type: string
          description: |
            - NOT REQUIRED: The overall XSLT format applied to this page configuration. Priority: formatId > formatPath.
        formatRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: Whether or not the format is recycled.
        pageRegions:
          type: array
          description: |
            - NOT REQUIRED: Regions of the page.
          items:
            type: object
            description: |
              - A single page region.
            properties:
              name:
                type: string
                description: |
                  - The name of the page region.
              blockId:
                type: string
                description: |
                  - NOT REQUIRED: The block assigned to this page region.
              blockPath:
                type: string
                description: |
                  - NOT REQUIRED: The block assigned to this page region.
              formatId:
                type: string
                description: |
                  - NOT REQUIRED: The format applied to this page region.
              formatPath:
                type: string
                description: |
                  - NOT REQUIRED: The format applied to this page region.
        outputExtension:
          type: string
          description: |
            - NOT REQUIRED: The output extension, if specified, of the page configuration.
        serializationType:
          $ref: "#/components/schemas/SerializationType"
          description: |
            - NOT REQUIRED: The serialization type.
        includeXMLDeclaration:
          type: boolean
          description: |
            - NOT REQUIRED: Whether or not to include an XML declaration in the output.
        publishable:
          type: boolean
          description: |
            - NOT REQUIRED: Whether or not the page is publishable.
      required:
        - name
        - defaultConfiguration

    PageRegionProperties:
      type: object
      description: |
        - Properties specific to a page region.
      properties:
        name:
          type: string
          description: |
            - The name of this page region, for example, "DEFAULT", or "JAVASCRIPT-INCLUDE".
            - This MUST correspond to the name of a region defined in the template. REQUIRED.
        blockId:
          type: string
          description: |
            - The block assigned at this page region. Priority: blockId > blockPath. NOT REQUIRED.
        blockPath:
          type: string
          description: |
            - Path works only for non-recycled assets.
        blockRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        noBlock:
          type: boolean
          description: |
            - When this is set to true, this will keep a block defined at a lower level from applying to this region. NOT REQUIRED: default: false.
          default: false
        formatId:
          type: string
          description: |
            - The format assigned at this page region, can be either XSLT or script. Priority: formatId > formatPath. NOT REQUIRED.
        formatPath:
          type: string
          description: |
            - Path works only for non-recycled assets.
        formatRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        noFormat:
          type: boolean
          description: |
            - When this is set to true, this will keep a format defined at a lower level from applying to this region. NOT REQUIRED: default: false.
          default: false
      required:
        - name

    PageRegion:
      allOf:
        - $ref: "#/components/schemas/BaseAsset"
        - $ref: "#/components/schemas/PageRegionProperties"
      description: |
        - An individual page region.

    PageRegions:
      allOf:
        - $ref: "#/components/schemas/PageRegion"
      description: |
        - Complex type wrapping a list of page regions.

    PageConfiguration:
      allOf:
        - $ref: "#/components/schemas/BaseAsset"
        - $ref: "#/components/schemas/PageConfigurationProperties"
      description: |
        - A single page configuration.

    PageConfigurations:
      allOf:
        - $ref: "#/components/schemas/PageConfiguration"
      description: |
        - A list of page configurations.

    GlobalAbilities:
      type: object
      properties:
        bypassAllPermissionsChecks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessSiteManagement:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        createSites:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editAccessRights:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessAudits:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessAllSites:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewSystemInfoAndLogs:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        forceLogout:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        diagnosticTests:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessSecurityArea:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        optimizeDatabase:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        syncLdap:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        configureLogging:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        searchingIndexing:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessConfiguration:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editSystemPreferences:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        broadcastMessages:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewUsersInMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewAllUsers:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        createUsers:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        deleteUsersInMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        deleteAllUsers:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewAllGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        createGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        deleteMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessRoles:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        createRoles:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        deleteAnyGroup:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editAnyUser:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editUsersInMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editAnyGroup:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editMemberGroups:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        databaseExportTool:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        changeIdentity:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessDefaultEditorConfiguration:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        modifyDictionary:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.

    SiteAbilities:
      type: object
      properties:
        bypassAllPermissionsChecks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        uploadImagesFromWysiwyg:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        multiSelectCopy:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        multiSelectPublish:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        multiSelectMove:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        multiSelectDelete:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editPageLevelConfigurations:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editPageContentType:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editDataDefinition:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        publishReadableHomeAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        publishWritableHomeAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        editAccessRights:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewVersions:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        activateDeleteVersions:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessAudits:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bypassWorkflow:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        assignApproveWorkflowSteps:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        deleteWorkflows:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        breakLocks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        assignWorkflowsToFolders:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bypassAssetFactoryGroupsNewMenu:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bypassDestinationGroupsWhenPublishing:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bypassWorkflowDefintionGroupsForFolders:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessManageSiteArea:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessAssetFactories:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessConfigurationSets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessDataDefinitions:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessSharedFields:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessMetadataSets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessPublishSets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessDestinations:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessTransports:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessWorkflowDefinitions:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessWorkflowEmails:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessContentTypes:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessConnectors:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        publishReadableAdminAreaAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        publishWritableAdminAreaAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        importZipArchive:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bulkChange:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        recycleBinViewRestoreUserAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        recycleBinDeleteAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        recycleBinViewRestoreAllAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        moveRenameAssets:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        diagnosticTests:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        alwaysAllowedToToggleDataChecks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        viewPublishQueue:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        reorderPublishQueue:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        cancelPublishJobs:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        sendStaleAssetNotifications:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        brokenLinkReportAccess:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        brokenLinkReportMarkFixed:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessEditorConfigurations:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        bypassWysiwygEditorRestrictions:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.
        accessSiteImproveIntegration:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Default is false.

    ContaineredAssetProperties:
      type: object
      properties:
        parentContainerId:
          type: string
          description: |
            - NOT REQUIRED on edit: For defining the container relationship.
            - Priority: parentContainerId > parentContainerPath.
            - Required on create, ignored on edit. Use move operation to move an asset after it has been created.
        parentContainerPath:
          type: string
          description: |
            - NOT REQUIRED on edit: Priority: parentContainerId > parentContainerPath.
            - One is REQUIRED on create, ignored on edit.
        path:
          type: string
          description: |
            - NOT REQUIRED: The path of an asset.
            - Left blank when creating, specify this to uniquely identify an asset when editing.
        siteId:
          type: string
          description: |
            - NOT REQUIRED: The site in which the asset is located.
            - Priority: siteId > siteName. One is REQUIRED.
        siteName:
          type: string
          description: |
            - NOT REQUIRED: Priority: siteId > siteName. One is REQUIRED.

    ContaineredAsset:
      allOf:
        - $ref: "#/components/schemas/NamedAsset"
        - $ref: "#/components/schemas/ContaineredAssetProperties"
      description: |
        - All system area assets are 'containered'.

    AssetFactoryPluginParameter:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: Parameter name (not label).
          examples: ["assetfactory.plugin.filelimit.param.name.size"]
        value:
          type: string
          description: |
            - NOT REQUIRED: Parameter value.
          default: ""
      required:
        - name

    AssetFactoryPluginParameters:
      allOf:
        - $ref: "#/components/schemas/AssetFactoryPluginParameter"
      description: |
        - Complex type wrapping a list of asset factory plugin parameters.

    AssetFactoryPlugin:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: Name of the asset factory plugin.
          examples: ["com.cms.assetfactory.DisplayToSystemNamePlugin"]
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/AssetFactoryPluginParameter"
          description: |
            - NOT REQUIRED: Parameters for the asset factory plugin.
      required:
        - name

    AssetFactoryPlugins:
      allOf:
        - $ref: "#/components/schemas/AssetFactoryPlugin"
      description: |
        - Complex type wrapping a list of asset factory plugins.

    ContentTypePageConfigurationPublishMode:
      type: string
      enum:
        - "all-destinations"
        - "selected-destinations"
        - "do-not-publish"
      description: |
        - Enum values for ContentTypePageConfigurationPublishMode.

    DestinationList:
      allOf:
        - $ref: "#/components/schemas/Identifier"
      description: |
        - A list of identifiers of publishable assets (files, folders, or pages).

    ContentTypePageConfiguration:
      type: object
      properties:
        pageConfigurationId:
          type: string
          description: |
            - Priority: pageConfigurationId > pageConfigurationName.
            - One is REQUIRED.
        pageConfigurationName:
          type: string
        publishMode:
          $ref: "#/components/schemas/ContentTypePageConfigurationPublishMode"
          description: |
            - REQUIRED.
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/DestinationList"
          description: |
            - REQUIRED if "publishMode" is "selected-destinations", else NOT REQUIRED and ignored.
      required:
        - publishMode
      oneOf:
        - required:
            - pageConfigurationId
            - pageConfigurationName

    ContentTypePageConfigurations:
      allOf:
        - $ref: "#/components/schemas/ContentTypePageConfiguration"
      description: |
        - Array of ContentTypePageConfiguration.

    InlineEditableField:
      type: object
      properties:
        pageConfigurationName:
          type: string
          description: |
            - REQUIRED.
        pageRegionName:
          type: string
          description: |
            - REQUIRED.
        dataDefinitionGroupPath:
          type: string
          description: |
            - NOT REQUIRED. This property is only applicable for data-definition type fields.
            - It holds a list of ancestor data definition groups presented in the form of a path.
        type:
          $ref: "#/components/schemas/InlineEditableFieldType"
          description: |
            - REQUIRED.
        name:
          type: string
          description: |
            - REQUIRED for metadata and data-definition field type. NOT REQUIRED for xhtml field type.
            - Use title, displayName, summary, teaser, keywords, description, author, startDate, endDate, reviewDate for wired metadata fields,
            field name for dynamic metadata field or field identifier for a data definition field.
      required:
        - pageConfigurationName
        - pageRegionName
        - type

    InlineEditableFields:
      allOf:
        - $ref: "#/components/schemas/InlineEditableField"
      description: |
        - Array of InlineEditableField.

    InlineEditableFieldType:
      type: string
      enum:
        - "wired-metadata"
        - "dynamic-metadata"
        - "data-definition"
        - "xhtml"
      description: |
        - Enum values for InlineEditableFieldType.

    ConnectorParameter:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: Name of the parameter.
        value:
          type: string
          description: |
            - REQUIRED: Value of the parameter.
      required:
        - name
        - value

    ConnectorParameterList:
      allOf:
        - $ref: "#/components/schemas/ConnectorParameter"
      description: |
        - Array of ConnectorParameter.

    ConnectorContentTypeLinkParam:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: Name of the parameter.
        value:
          type: string
          description: |
            - REQUIRED: Value of the parameter.
      required:
        - name
        - value

    ConnectorContentTypeLinkParamList:
      allOf:
        - $ref: "#/components/schemas/ConnectorContentTypeLinkParam"
      description: |
        - NOT REQUIRED: An array of connector content type link parameters.

    ConnectorContentTypeLink:
      type: object
      properties:
        contentTypeId:
          type: string
          description: |
            - REQUIRED: One of contentTypeId or contentTypePath must be specified.
        contentTypePath:
          type: string
          description: |
            - REQUIRED: One of contentTypeId or contentTypePath must be specified.
        pageConfigurationId:
          type: string
          description: |
            - NOT REQUIRED: Identifier for the page configuration.
        pageConfigurationName:
          type: string
          description: |
            - NOT REQUIRED: Name for the page configuration.
        connectorContentTypeLinkParams:
          type: array
          items:
            $ref: "#/components/schemas/ConnectorContentTypeLinkParamList"
          description: |
            - NOT REQUIRED: A list of connector content type link params.
      oneOf:
        - required:
            - contentTypeId
            - contentTypePath

    ConnectorContentTypeLinkList:
      allOf:
        - $ref: "#/components/schemas/ConnectorContentTypeLink"
      description: |
        - Array of ConnectorContentTypeLink."

    ConnectorProperties:
      type: object
      properties:
        auth1:
          type: string
          description: |
            - NOT REQUIRED: First authentication token for the external application the connector connects to (usually a username or email address)
        auth2:
          type: string
          description: |
            - NOT REQUIRED: Second authentication token for the external application the connector connects to (usually a password)\nWrite only - hidden when read
          writeOnly: true
        url:
          type: string
          description: |
            - NOT REQUIRED: URL of the external application the connector connects to
        verified:
          type: boolean
          description: |
            - NOT REQUIRED: Determines whether or not the connector has been verified\nRead only - editing a connector always unverifies it
          readOnly: true
        verifiedDate:
          type: string
          description: |
            - NOT REQUIRED: The date this connector was verified\nRead only - editing a connector always clears the verification date
          readOnly: true
        connectorParameters:
          type: array
          items:
            $ref: "#/components/schemas/ConnectorParameterList"
          description: |
            - NOT REQUIRED: A list of connector parameters
        connectorContentTypeLinks:
          type: array
          items:
            $ref: "#/components/schemas/ConnectorContentTypeLinkList"
          description: |
            - REQUIRED for FacebookConnector and WordPressConnector

    Connector:
      allOf:
        - $ref: "#/components/schemas/ContaineredAsset"
        - $ref: "#/components/schemas/ConnectorProperties"

    StatusUpdateConnectorProperties:
      type: object
      properties:
        destinationId:
          type: string
          description: |
            - One is REQUIRED:
            - Priority: destinationId > destinationPath
        destinationPath:
          type: string
          description: |
            - One is REQUIRED:
            - Priority: destinationId > destinationPath
      oneOf:
        - required:
            - destinationId
            - destinationPath

    StatusUpdateConnector:
      allOf:
        - $ref: "#/components/schemas/Connector"
        - $ref: "#/components/schemas/StatusUpdateConnectorProperties"

    DynamicMetadataFieldType:
      type: string
      description: |
        - The different types of dynamic metadata fields
      enum:
        - text
        - datetime
        - radio
        - dropdown
        - checkbox
        - multiselect

    MetadataFieldVisibility:
      type: string
      description: |
        - Enumeration of the possible metadata field visibilities
      enum:
        - inline
        - hidden
        - visible

    DynamicMetadataFieldDefinitionValue:
      type: object
      properties:
        value:
          type: string
          description: |
            - NOT REQUIRED: The actual string value. When not provided, an empty string will be used.
        label:
          type: string
          description: |
            - NOT REQUIRED: Label displayed to the user editing an asset. When not provided, value will be displayed.
        selectedByDefault:
          type: boolean
          default: false
          description: |
            - Whether or not this value should be checked by default when creating new assets through web UI.

    DynamicMetadataFieldDefinitionValues:
      allOf:
        - $ref: "#/components/schemas/DynamicMetadataFieldDefinitionValue"

    DynamicMetadataFieldDefinition:
      type: object
      properties:
        name:
          type: string
          description: |
            - REQUIRED: The name of the dynamic metadata field.
        label:
          type: string
          description: |
            - REQUIRED: The label of the dynamic metadata field.
        fieldType:
          $ref: "#/components/schemas/DynamicMetadataFieldType"
        required:
          type: boolean
          default: false
          description: |
            - Whether or not this field is required.
        visibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          default: "visible"
        possibleValues:
          type: array
          items:
            $ref: "#/components/schemas/DynamicMetadataFieldDefinitionValues"
          description: |
            - REQUIRED for radio, checkbox, dropdown and multiselect types, ignored for text type.
        helpText:
          type: string
          description: |
            - Optional help text for this field.
      required:
        - name
        - label
        - fieldType

    DynamicMetadataFieldDefinitions:
      allOf:
        - $ref: "#/components/schemas/DynamicMetadataFieldDefinition"

    PublishableAssetList:
      allOf:
        - $ref: "#/components/schemas/Identifier"
      description: |
        - A list of identifiers of publishable assets (files, folders, or pages).

    ScheduledDestinationMode:
      type: string
      enum:
        - "all-destinations"
        - "selected-destinations"
      description: |
        - For Sites, Targets, Publish Sets scheduledPublishDestinationMode property

    DayOfWeek:
      type: string
      enum:
        - "Monday"
        - "Tuesday"
        - "Wednesday"
        - "Thursday"
        - "Friday"
        - "Saturday"
        - "Sunday"

    DaysOfWeek:
      type: object
      properties:
        dayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"

    AuthMode:
      type: string
      enum:
        - "PASSWORD"
        - "PUBLIC_KEY"

    FtpProtocolType:
      type: string
      enum:
        - "FTP"
        - "FTPS"
        - "SFTP"

    WorkflowNamingBehavior:
      type: string
      enum:
        - "auto-name"
        - "name-of-definition"
        - "empty"
      description: |
        - The different options for naming an instance of a workflow definition

    RoleAssignment:
      type: object
      properties:
        roleId:
          type: string
          description: |
            - NOT REQUIRED: Priority: roleId > roleName
        roleName:
          type: string
          description: |
            - NOT REQUIRED: Priority: roleId > roleName
        users:
          type: string
          description: |
            - NOT REQUIRED: Comma-delimited list of usernames.
        groups:
          type: string
          description: |
            - NOT REQUIRED: Comma-delimited list of group names.

    RoleAssignments:
      allOf:
        - $ref: "#/components/schemas/RoleAssignment"

    RecycleBinExpiration:
      type: string
      enum:
        - "1"
        - "15"
        - "30"
        - "never"

    NamingRuleCase:
      type: string
      enum:
        - "ANY"
        - "LOWER"
        - "UPPER"

    NamingRuleSpacing:
      type: string
      enum:
        - "SPACE"
        - "REMOVE"
        - "HYPHEN"
        - "UNDERSCORE"

    NamingRuleAsset:
      type: object
      properties:
        namingRuleAsset:
          type: string
          enum:
            - "block"
            - "file"
            - "folder"
            - "page"
            - "symlink"
            - "template"
            - "reference"
            - "format"

    NamingRuleAssets:
      allOf:
        - $ref: "#/components/schemas/NamingRuleAsset"

    WorkflowStepConfiguration:
      type: object
      properties:
        stepIdentifier:
          type: string
          description: |
            - REQUIRED: The step's unique text identifier/name.
        stepAssignment:
          type: string
          description: |
            - REQUIRED: The step's assignment (user or group name).
      required:
        - stepIdentifier
        - stepAssignment

    WorkflowStepConfigurations:
      allOf:
        - $ref: "#/components/schemas/WorkflowStepConfiguration"
      description: |
        - An array of workflow step configuration objects

    WorkflowConfiguration:
      type: object
      properties:
        workflowName:
          type: string
          description: |
            - REQUIRED: When the workflow is instantiated, this will be its name.
        workflowDefinitionId:
          type: string
          description: |
            - Priority: workflowDefinitionId > workflowDefinitionPath. One is REQUIRED.
        workflowDefinitionPath:
          type: string
          description: |
            - Priority: workflowDefinitionId > workflowDefinitionPath. One is REQUIRED.
        workflowComments:
          type: string
          description: |
            - REQUIRED: The comments for this operation which will be recorded with the workflow.
        workflowStepConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowStepConfigurations"
          description: |
            - NOT REQUIRED: default: the defaults as defined in the workflow definition.
        endDate:
          type: string
          description: |
            - Optional due date for the workflow. If not specified, will default to 7 days from today.
      required:
        - workflowName
        - workflowComments
      oneOf:
        - required:
            - workflowDefinitionId
            - workflowDefinitionPath

    OperationResult:
      type: object
      properties:
        success:
          type: string
        message:
          type: string
      required:
        - success
        - message

    AssetIdentifiers:
      allOf:
        - $ref: "#/components/schemas/Identifier"
      description: |
        - Array wrapper for multiple identifiers of assets

    UnpublishParameters:
      type: object
      properties:
        unpublish:
          type: boolean
          description: |
            - NOT REQUIRED: When true, the asset will be unpublished. Default: false.
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - NOT REQUIRED: Unpublishes the asset from the given destinations. Default: all enabled destinations in the asset's site.

    AclEntryLevel:
      type: string
      enum:
        - "read"
        - "write"
      description: |
        - The access level, either 'read' or 'write'.

    AclEntryType:
      type: string
      enum:
        - "user"
        - "group"
      description: |
        - The type of ACL entry, either 'user' or 'group'.

    AclEntry:
      type: object
      properties:
        level:
          $ref: "#/components/schemas/AclEntryLevel"
          description: |
            - REQUIRED: The access level, either 'read' or 'write'.
        type:
          $ref: "#/components/schemas/AclEntryType"
          description: |
            - REQUIRED: The type of ACL entry, either 'user' or 'group'.
        name:
          type: string
          description: |
            - REQUIRED: The name of the user or group for which this ACL entry applies.
      required:
        - level
        - type
        - name
      description: |
        - A single access control list entry

    AclEntries:
      allOf:
        - $ref: "#/components/schemas/AclEntry"
      description: |
        - Array wrapper for access control list entries

    AllLevel:
      type: string
      enum:
        - "none"
        - "read"
        - "write"
      description: |
        - Defines the access level for all users.

    AccessRightsInformation:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Unique identifier for the asset or component whose access rights are being defined.
        aclEntries:
          type: array
          items:
            $ref: "#/components/schemas/AclEntries"
          description: |
            - Optional list of Access Control List entries.
        allLevel:
          $ref: "#/components/schemas/AllLevel"
          description: |
            - REQUIRED: Defines the access level for all users.
      required:
        - identifier

    WorkflowSettings:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the workflow settings of a folder.
        workflowDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - NOT REQUIRED: Workflow definitions associated with this folder.
        inheritWorkflows:
          type: boolean
          description: |
            - NOT REQUIRED: Determines whether the workflow settings are inherited from the parent folder.
        requireWorkflow:
          type: boolean
          description: |
            - NOT REQUIRED: Indicates whether a workflow is required for this folder.
        inheritedWorkflowDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - NOT REQUIRED: Inherited workflow definitions from the parent folder. Ignored on edit.
      required:
        - identifier
      description: |
        - Complete data with the workflow settings of a folder

    FeedBlockProperties:
      type: object
      required:
        - feedURL
      properties:
        feedURL:
          type: string
          description: |
            - REQUIRED: The URL of an XML feed.

    FeedBlock:
      allOf:
        - $ref: "#/components/schemas/FeedBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    IndexBlockProperties:
      type: object
      required:
        - maxRenderedAssets
        - depthOfIndex
      properties:
        indexBlockType:
          type: string
          enum: ["folder", "content-type"]
          default: "folder"
          description: |
            - NOT REQUIRED: The type of the index block. It takes 'folder' as a default. Default: 'folder'
        indexedFolderId:
          type: string
          description: |
            - NOT REQUIRED: The indexed folder relationship when indexBlockType is folder. Priority: indexedFolderId > indexedFolderPath. When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin.
        indexedFolderPath:
          type: string
          description: |
            - NOT REQUIRED: Path works only for non-recycled assets.
        indexedContentTypeId:
          type: string
          description: |
            - NOT REQUIRED: The indexed content type relationship when indexBlockType is content-type. Priority: indexedContentTypeId > indexedContentTypePath. One is REQUIRED when indexBlockType is content-type.
        indexedContentTypePath:
          type: string
          description: |
            - NOT REQUIRED: The indexed content type relationship when indexBlockType is content-type. Priority: indexedContentTypeId > indexedContentTypePath. One is REQUIRED when indexBlockType is content-type.
        indexedFolderRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc.
        maxRenderedAssets:
          type: number
          description: |
            - REQUIRED: The maximum number of assets to render in XML form for this index block.
        depthOfIndex:
          type: number
          description: |
            - REQUIRED: The folder depth to which the indexer will render assets in XML form.
        renderingBehavior:
          type: string
          enum:
            [
              "render-normally",
              "hierarchy",
              "hierarchy-with-siblings",
              "hierarchy-siblings-forward",
            ]
          default: "render-normally"
          description: |
            - NOT REQUIRED: The rendering behavior of the folder index block. Default: 'render-normally'.
        indexPages:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to index page assets. Default: false.
        indexBlocks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to index block assets. Default: false.
        indexLinks:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to index (sym)link assets. Default: false.
        indexFiles:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to index file assets. Default: false.
        indexRegularContent:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to include path data. Default: false.
        indexSystemMetadata:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to include last modified date, last modified by, created date and created by. Default: false.
        indexUserMetadata:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to include wired/dynamic metadata. Default: false.
        indexAccessRights:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to include access rights information. Default: false.
        indexTags:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to include tags. Default: false.
        indexUserInfo:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: When this is 'true', an element 'user-information' will be added towards the bottom of the rendered XML including information about the user's login, full name and group memberships. Default: false.
        indexWorkflowInfo:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: When this is 'true', and this block is included in a page that is in workflow, an element containing the page's workflow information will be included in the rendered XML. Default: false.
        appendCallingPageData:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: When this is 'true', the page which includes this index block will have its information also included at the bottom in a 'calling-page-data' element. Default: false.
        sortMethod:
          type: string
          enum:
            [
              "folder-order",
              "alphabetical",
              "last-modified-date",
              "created-date",
            ]
          description: |
            - NOT REQUIRED: How to sort the folder contents when rendering the XML content. Default: 'folder-order' for folder index blocks and 'alphabetical' for content type index blocks.
        sortOrder:
          type: string
          enum: ["ascending", "descending"]
          default: "ascending"
          description: |
            - NOT REQUIRED: In what order to sort the assets in the index block. Default: ascending.
        pageXML:
          type: string
          enum: ["no-render", "render", "render-current-page-only"]
          default: "no-render"
          description: |
            - NOT REQUIRED: The Page XML rendering option. Default: no-render.

    IndexBlock:
      allOf:
        - $ref: "#/components/schemas/IndexBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    TextBlockProperties:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: |
            - REQUIRED: The text of the block.

    TextBlock:
      allOf:
        - $ref: "#/components/schemas/TextBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    XhtmlDataDefinitionBlockProperties:
      type: object

    XhtmlDataDefinitionBlock:
      allOf:
        - $ref: "#/components/schemas/XhtmlDataDefinitionBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    XmlBlockProperties:
      type: object

    XmlBlock:
      allOf:
        - $ref: "#/components/schemas/XmlBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    TwitterFeedBlockProperties:
      type: object
      properties:
        accountName:
          type: string
          description: |
            - NOT REQUIRED: The Account Name of the block.
            - REQUIRED for Tweets Only and Tweets and Mentions query types.
        searchString:
          type: string
          description: |
            - NOT REQUIRED: The Search String for the block.
            - REQUIRED for Tweets Only and Tweets and Mentions search terms types.
        maxResults:
          type: number
          description: |
            - REQUIRED: The maximum number of tweets which can be shown.
        useDefaultStyle:
          type: boolean
          default: true
          description: |
            - REQUIRED: Should the twitter feed block use the default CSS style?
        excludeJQuery:
          type: boolean
          default: false
          description: |
            - REQUIRED: Should the twitter feed block include the JQuery API?
        queryType:
          type: string
          enum: ["user-only", "users-and-mentions", "search-terms"]
          description: |
            - REQUIRED: The type of twitter feed block.
      required:
        - maxResults
        - useDefaultStyle
        - excludeJQuery
        - queryType

    TwitterFeedBlock:
      allOf:
        - $ref: "#/components/schemas/TwitterFeedBlockProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    FileProperties:
      type: object
      properties:
        text:
          type: string
          description: |
            - One is REQUIRED.
            - Priority: text > data.
            - A file either contains plaintext content or binary content (base64 encoded).
        data:
          type: array
          items:
            type: string
          description: |
            - One is REQUIRED.
            - Priority: text > data.
            - A file either contains plaintext content or binary content (base64 encoded).
        rewriteLinks:
          type: boolean
        linkRewriting:
          $ref: "#/components/schemas/LinkRewriting"
          default: "inherit"
          description: |
            - NOT REQUIRED: default: 'inherit'.
      oneOf:
        - required:
            - text
            - data

    File:
      allOf:
        - $ref: "#/components/schemas/FileProperties"
        - $ref: "#/components/schemas/PublishableAsset"

    FolderProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - The array of children.
            - Wrapper for an array of folder children (identifiers).
        includeInStaleContent:
          type: boolean
          description: |
            - NOT REQUIRED.

    Folder:
      allOf:
        - $ref: "#/components/schemas/FolderProperties"
        - $ref: "#/components/schemas/PublishableAsset"

    PageProperties:
      type: object
      properties:
        configurationSetId:
          type: string
          description: |
            - For defining the configuration set or content type relationship.
            - Priority: (contentTypeId > contentTypePath) > (configurationSetId > configurationSetPath).
            - One is REQUIRED: contentTypeId | contentTypePath | configurationSetId | configurationSetPath
        configurationSetPath:
          type: string
          description: |
            - For defining the configuration set or content type relationship.
            - Priority: (contentTypeId > contentTypePath) > (configurationSetId > configurationSetPath).
            - One is REQUIRED: contentTypeId | contentTypePath | configurationSetId | configurationSetPath
        contentTypeId:
          type: string
          description: |
            - For defining the configuration set or content type relationship.
            - Priority: (contentTypeId > contentTypePath) > (configurationSetId > configurationSetPath).
            - One is REQUIRED: contentTypeId | contentTypePath | configurationSetId | configurationSetPath
        contentTypePath:
          type: string
          description: |
            - For defining the configuration set or content type relationship.
            - Priority: (contentTypeId > contentTypePath) > (configurationSetId > configurationSetPath).
            - One is REQUIRED: contentTypeId | contentTypePath | configurationSetId | configurationSetPath
        structuredData:
          $ref: "#/components/schemas/StructuredData"
          description: |
            - A page either contains XHTML content (plain WYSIWYG page) or structured data content.
            - Priority: xhtml > structuredData. One is REQUIRED.
        xhtml:
          type: string
          description: |
            - A page either contains XHTML content (plain WYSIWYG page) or structured data content.
        pageConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/PageConfigurations"
          description: |
            - The page configurations containing page-level region block/format assignments.
            - NOT REQUIRED when creating a page, but you must submit assignment information when editing
            - if you want to maintain the region assignments.
        linkRewriting:
          $ref: "#/components/schemas/LinkRewriting"
          default: "inherit"
          description: |
            - NOT REQUIRED: default: 'inherit'.
      oneOf:
        - required:
            - configurationSetId
            - configurationSetPath
        - required:
            - contentTypeId
            - contentTypePath
        - required:
            - structuredData
            - xhtml

    Page:
      allOf:
        - $ref: "#/components/schemas/PageProperties"
        - $ref: "#/components/schemas/PublishableAsset"

    ReferenceProperties:
      type: object
      properties:
        referencedAssetId:
          type: string
          description: |
            - For defining the referenced asset relationship.
            - Priority: referencedAssetId > referencedAssetPath.
            - One is REQUIRED.
        referencedAssetPath:
          type: string
          description: |
            - For defining the referenced asset relationship.
            - Priority: referencedAssetId > referencedAssetPath.
            - One is REQUIRED.
        referencedAssetType:
          $ref: "#/components/schemas/EntityTypeString"
          description: |
            - The type of the referenced asset. REQUIRED.
      required:
        - referencedAssetType
      oneOf:
        - required:
            - referencedAssetId
            - referencedAssetPath

    Reference:
      allOf:
        - $ref: "#/components/schemas/ReferenceProperties"
        - $ref: "#/components/schemas/FolderContainedAsset"

    XsltFormatProperties:
      type: object
      properties:
        xml:
          type: string
          description: |
            - REQUIRED: The XML content of the xslt format.
      required:
        - xml

    XsltFormat:
      allOf:
        - $ref: "#/components/schemas/XsltFormatProperties"
        - $ref: "#/components/schemas/FolderContainedAsset"

    ScriptFormatProperties:
      type: object
      properties:
        script:
          type: string
          description: |
            - REQUIRED: The script content of the scriptFormat.
      required:
        - script

    ScriptFormat:
      allOf:
        - $ref: "#/components/schemas/ScriptFormatProperties"
        - $ref: "#/components/schemas/FolderContainedAsset"

    TemplateProperties:
      type: object
      properties:
        targetId:
          type: string
          description: |
            - NOT REQUIRED when template is inside of site.
            - REQUIRED when template is in the global area.
            - For defining the target relationship. Priority: targetId > targetPath.
        targetPath:
          type: string
          description: |
            - NOT REQUIRED when template is inside of site. REQUIRED when template is in the global area.
        formatId:
          type: string
          description: |
            - NOT REQUIRED: Overall xslt format applied to this template. Defaults to none.
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's ID in case it gets restored from the recycle bin.
        formatPath:
          type: string
          description: |
            - NOT REQUIRED: Path works only for non-recycled assets.
        formatRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        xml:
          type: string
          description: |
            - REQUIRED: The XHTML content of the template.
        pageRegions:
          type: array
          items:
            $ref: "#/components/schemas/PageRegions"
          description: |
            - NOT REQUIRED: The page regions and their block/xslt format assignments for this template. Defaults to all regions empty.
      required:
        - xml

    Template:
      allOf:
        - $ref: "#/components/schemas/TemplateProperties"
        - $ref: "#/components/schemas/FolderContainedAsset"

    SymlinkProperties:
      type: object
      properties:
        linkURL:
          type: string
          description: |
            - NOT REQUIRED: The fully qualified URL of this link.

    Symlink:
      allOf:
        - $ref: "#/components/schemas/SymlinkProperties"
        - $ref: "#/components/schemas/ExpiringAsset"

    UserProperties:
      type: object
      properties:
        username:
          type: string
          description: |
            - REQUIRED: The username of the user.
        fullName:
          type: string
          description: |
            - REQUIRED: The full name of the user.
        email:
          type: string
          description: |
            - REQUIRED: The user's email.
        authType:
          type: string
          enum: ["normal", "ldap", "custom"]
          description: |
            - REQUIRED: The way the user is authenticated.
        password:
          type: string
          description: |
            - REQUIRED:
            - The password for this user.
            - When authType is custom, this is not used.
        enabled:
          type: boolean
          description: |
            - NOT REQUIRED: Whether or not this user is enabled. Default false.
        groups:
          type: string
          description: |
            - REQUIRED: A semi-colon separated list of groups this user is a member of.
        role:
          type: string
          description: |
            - REQUIRED: This user's roles.
        defaultSiteId:
          type: string
          description: |
            - NOT REQUIRED: Default Site for the user, defaultSiteId takes precedence if both fields are set.
        defaultSiteName:
          type: string
          description: |
            - NOT REQUIRED:
        ldapDN:
          type: string
          description: |
            - REQUIRED if authType is ldap; otherwise, NOT REQUIRED.
      required:
        - username
        - fullName
        - email
        - authType
        - password
        - groups
        - role

    User:
      allOf:
        - $ref: "#/components/schemas/UserProperties"

    GroupProperties:
      type: object
      properties:
        groupName:
          type: string
          description: |
            - REQUIRED: The name of the group.
        users:
          type: string
          description: |
            - NOT REQUIRED:
            - Semi-colon delimited list of all of the member users of this group.
        role:
          type: string
          description: |
            - REQUIRED:
            - The Roles for this group.
            - Note that this role will also apply to all the members, possibly adding roles for those users.
      required:
        - groupName
        - role

    Group:
      allOf:
        - $ref: "#/components/schemas/GroupProperties"

    RoleProperties:
      type: object
      properties:
        roleType:
          type: string
          enum: ["site", "global"]
          description: |
            - NOT REQUIRED: The type of the role.
        globalAbilities:
          $ref: "#/components/schemas/GlobalAbilities"
          description: |
            - ONE is REQUIRED:
            - The global or site abilities for the role.
            - Use the correct one depending on the type of the role.
        siteAbilities:
          $ref: "#/components/schemas/SiteAbilities"
          description: |
            - ONE is REQUIRED:
            - The global or site abilities for the role.
            - Use the correct one depending on the type of the role.
      oneOf:
        - required:
            - globalAbilities
            - siteAbilities

    Role:
      allOf:
        - $ref: "#/components/schemas/RoleProperties"
        - $ref: "#/components/schemas/NamedAsset"

    AssetFactoryProperties:
      type: object
      properties:
        applicableGroups:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of string group names for which this asset is available for use. Leave out to assign no groups.
        assetType:
          type: string
          description: |
            - REQUIRED: The type of asset this factory will create.
        baseAssetId:
          type: string
          description: |
            - NOT REQUIRED: The default/base asset for this factory.
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's ID in case it gets restored from the recycle bin.
        baseAssetPath:
          type: string
          description: |
            - NOT REQUIRED: Path works only for non-recycled assets.
        baseAssetRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        description:
          type: string
          description: |
            - NOT REQUIRED: The description text for this factory which is displayed in the new menu. Defaults to null.
          default: null
        placementFolderId:
          type: string
          description: |
            - NOT REQUIRED: Where assets created from this factory must be placed if specified.
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's ID in case it gets restored from the recycle bin.
        placementFolderPath:
          type: string
          description: |
            - NOT REQUIRED: Path works only for non-recycled assets.
        placementFolderRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        allowSubfolderPlacement:
          type: boolean
          description: |
            - NOT REQUIRED: When the placement folder is specified, this allows assets to be placed in subfolders of that folder as well. Defaults to false.
          default: false
        folderPlacementPosition:
          type: number
          description: |
            - NOT REQUIRED: Assets created from this factory will be positioned at this folder position. Defaults to 0.
          default: 0
        overwrite:
          type: boolean
          description: |
            - NOT REQUIRED: If an asset is created from this factory and placed in a folder with an asset of the same name, whether or not that asset will be overwritten. Defaults to false.
          default: false
        workflowMode:
          type: string
          description: |
            - REQUIRED: What workflow behavior to use when creating assets using this asset factory.
          enum:
            - folder-controlled
            - factory-controlled
            - none
        workflowDefinitionId:
          type: string
          description: |
            - NOT REQUIRED: When workflowMode is 'factory-controlled', this specifies the workflow definition to use.
        workflowDefinitionPath:
          type: string
          description: |
            - NOT REQUIRED: Defaults to empty.
          default: ""
        plugins:
          type: array
          items:
            $ref: "#/components/schemas/AssetFactoryPlugins"
          description: |
            - NOT REQUIRED: An array of asset factory plugins assigned to the asset factory. Defaults to empty.
      required:
        - assetType
        - workflowMode

    AssetFactory:
      allOf:
        - $ref: "#/components/schemas/AssetFactoryProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    AssetFactoryContainerProperties:
      type: object
      properties:
        applicableGroups:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of string group names for which this asset is available for use.
        description:
          type: string
          description: |
            - NOT REQUIRED: String describing the asset factory container, displayed in the new menu.
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children.

    AssetFactoryContainer:
      allOf:
        - $ref: "#/components/schemas/AssetFactoryContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    ContentTypeProperties:
      type: object
      properties:
        pageConfigurationSetId:
          type: string
          description: |
            - One is REQUIRED: Priority: pageConfigurationSetId > pageConfigurationSetPath.
        pageConfigurationSetPath:
          type: string
          description: |
            - One is REQUIRED: Priority: pageConfigurationSetId > pageConfigurationSetPath.
        metadataSetId:
          type: string
          description: |
            - One is REQUIRED: Priority: metadataSetId > metadataSetPath.
        metadataSetPath:
          type: string
          description: |
            - One is REQUIRED: Priority: metadataSetId > metadataSetPath.
        dataDefinitionId:
          type: string
          description: |
            - NOT REQUIRED: Priority: dataDefinitionId > dataDefinitionPath.
        dataDefinitionPath:
          type: string
          description: |
            - NOT REQUIRED: Priority: dataDefinitionId > dataDefinitionPath.
        editorConfigurationId:
          type: string
          description: |
            - NOT REQUIRED: Priority: editorConfigurationId > editorConfigurationPath.
        editorConfigurationPath:
          type: string
          description: |
            - NOT REQUIRED: Priority: editorConfigurationId > editorConfigurationPath.
        publishSetId:
          type: string
          description: |
            - NOT REQUIRED: Priority: publishSetId > publishSetPath.
        publishSetPath:
          type: string
          description: |
            - NOT REQUIRED: Priority: publishSetId > publishSetPath.
        contentTypePageConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/ContentTypePageConfigurations"
          description: |
            - NOT REQUIRED: if not specified, the default publish mode 'all-destinations' is used for each pageConfiguration.
        inlineEditableFields:
          type: array
          items:
            $ref: "#/components/schemas/InlineEditableFields"
          description: |
            - NOT REQUIRED: if not specified, none of the regions or fields will be inline editable.
      oneOf:
        - required:
            - pageConfigurationSetId
            - pageConfigurationSetPath
        - required:
            - metadataSetId
            - metadataSetPath

    ContentType:
      allOf:
        - $ref: "#/components/schemas/ContentTypeProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    ContentTypeContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children (identifiers).

    ContentTypeContainer:
      allOf:
        - $ref: "#/components/schemas/ContentTypeContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    ConnectorContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children (identifiers).

    ConnectorContainer:
      allOf:
        - $ref: "#/components/schemas/ConnectorContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    FacebookConnectorProperties:
      type: object

    FacebookConnector:
      allOf:
        - $ref: "#/components/schemas/FacebookConnectorProperties"
        - $ref: "#/components/schemas/StatusUpdateConnector"

    WordPressConnectorProperties:
      type: object

    WordPressConnector:
      allOf:
        - $ref: "#/components/schemas/WordPressConnectorProperties"
        - $ref: "#/components/schemas/Connector"

    GoogleAnalyticsConnectorProperties:
      type: object

    GoogleAnalyticsConnector:
      allOf:
        - $ref: "#/components/schemas/GoogleAnalyticsConnectorProperties"
        - $ref: "#/components/schemas/Connector"

    PageConfigurationSetProperties:
      type: object
      properties:
        pageConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/PageConfigurations"
          description: |
            - REQUIRED: The individual page configurations contained within this set.
      required:
        - pageConfigurations

    PageConfigurationSet:
      allOf:
        - $ref: "#/components/schemas/PageConfigurationSetProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    PageConfigurationSetContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children assets.

    PageConfigurationSetContainer:
      allOf:
        - $ref: "#/components/schemas/PageConfigurationSetContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    DataDefinitionProperties:
      type: object
      properties:
        xml:
          type: string
          description: |
            - REQUIRED: The XML content of this data definition.
      required:
        - xml

    DataDefinition:
      allOf:
        - $ref: "#/components/schemas/DataDefinitionProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    DataDefinitionContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children.

    DataDefinitionContainer:
      allOf:
        - $ref: "#/components/schemas/DataDefinitionContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    SharedFieldProperties:
      type: object
      properties:
        xml:
          type: string
          description: |
            - REQUIRED: The XML content of this shared field.
      required:
        - xml

    SharedField:
      allOf:
        - $ref: "#/components/schemas/SharedFieldProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    SharedFieldContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children.

    SharedFieldContainer:
      allOf:
        - $ref: "#/components/schemas/SharedFieldContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    MetadataSetProperties:
      type: object
      description: |
        - This schema represents the properties for MetadataSet.
      properties:
        authorFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the author field is required on assets using this metadata set. Default is false.
        authorFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the author field for assets using this metadata set. Default is 'visible'.
        authorFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the author field.
        descriptionFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the description field is required on assets using this metadata set. Default is false.
        descriptionFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the description field for assets using this metadata set. Default is 'visible'.
        descriptionFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the description field.
        displayNameFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the display name field is required on assets using this metadata set. Default is false.
        displayNameFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the display name field for assets using this metadata set. Default is 'visible'.
        displayNameFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the display name field.
        endDateFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the end date field is required on assets using this metadata set. Default is false.
        endDateFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the end date field for assets using this metadata set. Default is 'visible'.
        endDateFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the end date field.
        expirationFolderFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the expiration folder field is required on assets using this metadata set. Default is false.
        expirationFolderFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the expiration folder field for assets using this metadata set. Default is 'visible'.
        expirationFolderFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the expiration folder field.
        keywordsFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the keywords field is required on assets using this metadata set. Default is false.
        keywordsFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the keywords field for assets using this metadata set. Default is 'visible'.
        keywordsFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the keywords field.
        reviewDateFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the review date field is required on assets using this metadata set. Default is false.
        reviewDateFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the review date field for assets using this metadata set. Default is 'visible'.
        reviewDateFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the review date field.
        startDateFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the start date field is required on assets using this metadata set. Default is false.
        startDateFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the start date field for assets using this metadata set. Default is 'visible'.
        startDateFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the start date field.
        summaryFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the summary field is required on assets using this metadata set. Default is false.
        summaryFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the summary field for assets using this metadata set. Default is 'visible'.
        summaryFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the summary field.
        teaserFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the teaser field is required on assets using this metadata set. Default is false.
        teaserFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the teaser field for assets using this metadata set. Default is 'visible'.
        teaserFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the teaser field.
        titleFieldRequired:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether the title field is required on assets using this metadata set. Default is false.
        titleFieldVisibility:
          $ref: "#/components/schemas/MetadataFieldVisibility"
          description: |
            - NOT REQUIRED: The visibility of the title field for assets using this metadata set. Default is 'visible'.
        titleFieldHelpText:
          type: string
          description: |
            - NOT REQUIRED: The help text for the title field.
        dynamicMetadataFieldDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/DynamicMetadataFieldDefinitions"
          description: |
            - NOT REQUIRED: The dynamic metadata field definitions.

    MetadataSet:
      allOf:
        - $ref: "#/components/schemas/MetadataSetProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    MetadataSetContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children.

    MetadataSetContainer:
      allOf:
        - $ref: "#/components/schemas/MetadataSetContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    PublishSetProperties:
      type: object
      description: |
        - This schema represents the properties for a Publish Set.
      properties:
        files:
          type: array
          items:
            $ref: "#/components/schemas/PublishableAssetList"
          description: |
            - NOT REQUIRED: A list of files that is included in this publish set. Default is empty.
        folders:
          type: array
          items:
            $ref: "#/components/schemas/PublishableAssetList"
          description: |
            - NOT REQUIRED: A list of folders that is included in this publish set. Default is empty.
        pages:
          type: array
          items:
            $ref: "#/components/schemas/PublishableAssetList"
          description: |
            - NOT REQUIRED: A list of pages that is included in this publish set. Default is empty.
        usesScheduledPublishing:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to publish this set on a schedule. Default is false.
        scheduledPublishDestinationMode:
          $ref: "#/components/schemas/ScheduledDestinationMode"
          description: |
            - NOT REQUIRED: Scheduled publish destination selection mode.
        scheduledPublishDestinations:
          type: array
          items:
            $ref: "#/components/schemas/DestinationList"
          description: |
            - NOT REQUIRED: Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly.
        timeToPublish:
          type: string
          default: "00:00"
          description: |
            - NOT REQUIRED: The base time this set will be published. Default is 00:00 (midnight).
        publishIntervalHours:
          type: number
          description: |
            - NOT REQUIRED: Every how many hours the asset should be published. Can be between 1 and 23.
        publishDaysOfWeek:
          type: array
          items:
            $ref: "#/components/schemas/DaysOfWeek"
          description: |
            - NOT REQUIRED: Which days of the week the job should publish on.
        cronExpression:
          type: string
          description: |
            - NOT REQUIRED: Cron expression for scheduled publishing.
        sendReportToUsers:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of string user names for which this asset is available for use.
        sendReportToGroups:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of string group names for which this asset is available for use.
        sendReportOnErrorOnly:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to send a report when there are no errors. Default is false.

    PublishSet:
      allOf:
        - $ref: "#/components/schemas/PublishSetProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    PublishSetContainerProperties:
      type: object
      description: |
        - This schema represents the properties for a Publish Set Container.

    PublishSetContainer:
      allOf:
        - $ref: "#/components/schemas/PublishSetContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    TargetProperties:
      type: object
      description: |
        - This schema represents the properties for a Target.
      properties:
        parentTargetId:
          type: string
          description: |
            - Priority: parentTargetId > parentTargetPath
            - One is REQUIRED
        parentTargetPath:
          type: string
          description: |
            - Priority: parentTargetId > parentTargetPath
            - One is REQUIRED
        path:
          type: string
          description: |
            - The path of this target. When creating this need not be specified. When editing this will be the CURRENT path of the target.
        baseFolderId:
          type: string
          description: |
            - Priority: baseFolderId > baseFolderPath
            - One is REQUIRED
        baseFolderPath:
          type: string
          description: |
            - Priority: baseFolderId > baseFolderPath
            - One is REQUIRED
        outputExtension:
          type: string
          description: |
            - REQUIRED: The output file extension, for example".html\"
        cssClasses:
          type: string
          default: ""
          description: |
            - The CSS classes that pages using this target will have available to them in the WYSIWYG editor (comma-delimited list). NOT REQUIRED default: empty
        cssFileId:
          type: string
          description: |
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin. Priority: cssFileId > cssFilePath
        cssFilePath:
          type: string
          description: |
            - Path works only for non-recycled assets.
        cssFileRecycled:
          type: boolean
          description: |
            - For reading purposes only. Ignored when editing, copying etc.
        serializationType:
          $ref: "#/components/schemas/SerializationType"
          description: |
            - REQUIRED: The content type this target serializes its output as
        includeXMLDeclaration:
          type: boolean
          default: false
          description: |
            - When the serializationType is"XML\", should Cascade include the XML declaration in published files? NOT REQUIRED default: false
        includeTargetPath:
          type: boolean
          default: false
          description: |
            - When publishing, whether or not to include the target path as part of the path of the published file. NOT REQUIRED default: false
        removeBaseFolder:
          type: boolean
          default: false
          description: |
            - When publishing, whether or not to remove the base folder's path from the path of the published file. NOT REQUIRED default: false
        usesScheduledPublishing:
          type: boolean
          default: false
          description: |
            - Whether or not to publish this set on a schedule. NOT REQUIRED default: false
        scheduledPublishDestinationMode:
          type: string
          description: |
            - Scheduled publish destination selection mode. NOT REQUIRED
        scheduledPublishDestinations:
          type: array
          items:
            $ref: "#/components/schemas/DestinationList"
          description: |
            - Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly. NOT REQUIRED
        timeToPublish:
          type: string
          default: "00:00"
          description: |
            - The base time this set will be published. For example, if one wanted this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter one of those times here and set the"publishInterval\" to 4, and the"publishIntervalUnits\" to"hours\". NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored
        publishIntervalHours:
          type: number
          description: |
            - Every how many hours the asset should be published. Can be between 1 and 23. One of the following 3 is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        publishDaysOfWeek:
          type: array
          items:
            $ref: "#/components/schemas/DaysOfWeek"
          description: |
            - Which days of the week the job should publish on - select all days to have a daily publish. One of the following 3 is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        cronExpression:
          type: string
          description: |
            - Applicable only if publishInterval Units is"cron\" - only a valid Cron Expression will be accepted. One of the following 3 is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        sendReportToUsers:
          type: string
          description: |
            - Semicolon-delimited list of string user names for which this asset is available for use. NOT REQUIRED leave out to assign no users
        sendReportToGroups:
          type: string
          description: |
            - Semicolon-delimited list of string group names for which this asset is available for use. NOT REQUIRED leave out to assign no groups
        sendReportOnErrorOnly:
          type: boolean
          default: false
          description: |
            - Whether or not to send a report when there are no errors. NOT REQUIRED default: false
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children
      required:
        - outputExtension
        - serializationType
      oneOf:
        - required:
            - parentTargetId
            - parentTargetPath
        - required:
            - baseFolderId
            - baseFolderPath

    Target:
      allOf:
        - $ref: "#/components/schemas/TargetProperties"
        - $ref: "#/components/schemas/NamedAsset"

    SiteDestinationContainerProperties:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED: The array of children assets.

    SiteDestinationContainer:
      type: object
      allOf:
        - $ref: "#/components/schemas/SiteDestinationContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    DestinationProperties:
      type: object
      properties:
        parentContainerId:
          type: string
          description: |
            - Priority: parentContainerId > parentContainerPath
            - One is REQUIRED
            - When inside a Site, this field must refer to a SiteDestinationContainer.
            - When not in a Site, this field must refer to a Target
        parentContainerPath:
          type: string
          description: |
            - Priority: parentContainerId > parentContainerPath
            - One is REQUIRED
            - When inside a Site, this field must refer to a SiteDestinationContainer.
            - When not in a Site, this field must refer to a Target
        transportId:
          type: string
          description: |
            - Priority: transportId > transportPath
            - One is REQUIRED
        transportPath:
          type: string
          description: |
            - Priority: transportId > transportPath
            - One is REQUIRED
        applicableGroups:
          type: string
          description: |
            - Semicolon-delimited list of string group names
            - NOT REQUIRED
        directory:
          type: string
          description: |
            - The directory to place the published files in
            - NOT REQUIRED
        enabled:
          type: boolean
          description: |
            - Whether or not this destination is enabled for publishing
            - NOT REQUIRED
        checkedByDefault:
          type: boolean
          description: |
            - Whether or not this destination is checked by default
            - NOT REQUIRED
        publishASCII:
          type: boolean
          description: |
            - Whether or not to only publish ASCII characters
            - NOT REQUIRED
        usesScheduledPublishing:
          type: boolean
          description: |
            - Whether or not to publish this set on a schedule
            - NOT REQUIRED
        scheduledPublishDestinationMode:
          $ref: "#/components/schemas/ScheduledDestinationMode"
          description: |
            - Not used, will be ignored if any value is set
        scheduledPublishDestinations:
          type: array
          items:
            $ref: "#/components/schemas/DestinationList"
          description: |
            - Not used, will be ignored if any value is set
        timeToPublish:
          type: string
          description: |
            - The base time this set will be published.
            - For example if one wanted this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter one of those times here and set the "publishInterval" to 4, and the "publishIntervalUnits" to "hours"
            - NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored
        publishIntervalHours:
          type: number
          description: |
            - Every how many hours the asset should be published. Can be between 1 and 23
            - One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        publishDaysOfWeek:
          type: array
          items:
            type: string
          description: |
            - Which days of the week the job should publish on
            - One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        cronExpression:
          type: string
          description: |
            - Applicable only if publishInterval Units is "cron"
            - One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored
        sendReportToUsers:
          type: string
          description: |
            - Semicolon-delimited list of string user names
            - NOT REQUIRED
        sendReportToGroups:
          type: string
          description: |
            - Semicolon-delimited list of string group names
            - NOT REQUIRED
        sendReportOnErrorOnly:
          type: boolean
          description: |
            - Whether or not to send a report when there are no errors
            - NOT REQUIRED default: false
        webUrl:
          type: string
          description: |
            - The base URL for linking to a given configuration during publishing
            - NOT REQUIRED
        extensionsToStrip:
          type: string
          description: |
            - Comma-separated list of extensions to strip from links
            - NOT REQUIRED
        siteId:
          type: string
          description: |
            - Priority: siteId > siteName
            - One is REQUIRED
        siteName:
          type: string
          description: |
            - Priority: siteId > siteName
            - One is REQUIRED
      oneOf:
        - required:
            - parentContainerId
            - parentContainerPath
        - required:
            - transportId
            - transportPath
        - required:
            - siteId
            - siteName

    Destination:
      type: object
      allOf:
        - $ref: "#/components/schemas/DestinationProperties"
        - $ref: "#/components/schemas/NamedAsset"

    FileSystemTransportProperties:
      type: object
      description: |
        - Properties for the FileSystem Transport
      properties:
        directory:
          type: string
          description: |
            - REQUIRED
            - The directory to output the files to, for example "c:\inetfiles\wwwroot"
          examples: ["c:\\inetfiles\\wwwroot"]
      required:
        - directory

    FileSystemTransport:
      type: object
      allOf:
        - $ref: "#/components/schemas/FileSystemTransportProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    FtpTransportProperties:
      type: object
      description: |
        - Properties for the Ftp Transport
      properties:
        hostName:
          type: string
          description: |
            - REQUIRED
            - The host name or IP address of the remote server
        port:
          type: number
          description: |
            - REQUIRED
            - The port to use to connect to the server
        doPASV:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not to connect using PASV mode FTP
        username:
          type: string
          description: |
            - REQUIRED
            - The username to use when connecting to the server
        authMode:
          $ref: "#/components/schemas/AuthMode"
          description: |
            - REQUIRED when ftpProtocolType is SFTP
            - The authentication mode to use when connecting to the server. Applicable only when ftpProtocolType is SFTP
        privateKey:
          type: string
          default: ""
          description: |
            - NOT REQUIRED
            - The key to use when connecting to the server. Applicable only when ftpProtocolType is SFTP and authMode is "PUBLIC_KEY"
        password:
          type: string
          description: |
            - REQUIRED when ftpProtocolType is FTP or FTPS or when ftpProtocolType is SFTP and authMode is "PASSWORD"
            - The password to use when connecting to the server
        directory:
          type: string
          default: ""
          description: |
            - NOT REQUIRED
            - The directory to place the files in
        ftpProtocolType:
          $ref: "#/components/schemas/FtpProtocolType"
          default: "ftp"
          description: |
            - REQUIRED
            - Whether or not to connect using regular FTP, FTP over SSL/TLS, or SFTP using secure FTP (SSH protocol)
      required:
        - hostName
        - port
        - username
        - ftpProtocolType

    FtpTransport:
      type: object
      allOf:
        - $ref: "#/components/schemas/FtpTransportProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    DatabaseTransportProperties:
      type: object
      description: |
        - Properties for the Database Transport
      properties:
        transportSiteId:
          type: number
          description: |
            - REQUIRED
            - The site id
        serverName:
          type: string
          description: |
            - REQUIRED
            - The name of the database server
        serverPort:
          type: number
          description: |
            - REQUIRED
            - The port on which the database server is working
        databaseName:
          type: string
          description: |
            - REQUIRED
            - The name of the database itself
        username:
          type: string
          description: |
            - REQUIRED
            - The username to use when connecting to the server
        password:
          type: string
          default: ""
          description: |
            - NOT REQUIRED
            - The password to use when connecting to the server
      required:
        - transportSiteId
        - serverName
        - serverPort
        - databaseName
        - username

    DatabaseTransport:
      type: object
      allOf:
        - $ref: "#/components/schemas/DatabaseTransportProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    CloudTransportProperties:
      type: object
      description: |
        - Properties for the Cloud Transport
      properties:
        key:
          type: string
          description: |
            - REQUIRED
            - The S3 key
        secret:
          type: string
          description: |
            - REQUIRED
            - The S3 secret
        bucketName:
          type: string
          description: |
            - REQUIRED
            - The name of the S3 bucket
        basePath:
          type: string
          default: ""
          description: |
            - NOT REQUIRED
            - The directory to place the files in
      required:
        - key
        - secret
        - bucketName

    CloudTransport:
      type: object
      allOf:
        - $ref: "#/components/schemas/CloudTransportProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    TransportContainerProperties:
      type: object
      description: |
        - Properties for the Transport Container
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED
            - The array of children assets.

    TransportContainer:
      type: object
      allOf:
        - $ref: "#/components/schemas/TransportContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    WorkflowDefinitionProperties:
      type: object
      description: |
        - Properties for the Workflow Definition
      properties:
        applicableGroups:
          type: string
          description: |
            - NOT REQUIRED
            - Semicolon-delimited list of string group names for which this asset is available for use
        copy:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not this is a copy type workflow
        create:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not this is a create type workflow
        delete:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not this is a delete type workflow
        edit:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not this is an edit type workflow
        move:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED
            - Whether or not this is a move type workflow
        namingBehavior:
          $ref: "#/components/schemas/WorkflowNamingBehavior"
          description: |
            - REQUIRED
            - The naming behavior when an instance of this workflow is created
        xml:
          type: string
          description: |
            - REQUIRED
            - The actual workflow definition XML
        completedWorkflowEmailId:
          type: string
          description: |
            - NOT REQUIRED
            - Custom workflow email to send when email trigger set to completed
        completedWorkflowEmailPath:
          type: string
          description: |
            - NOT REQUIRED
        notificationWorkflowEmailId:
          type: string
          description: |
            - NOT REQUIRED
            - Custom workflow email to send when email trigger set to notify
        notificationWorkflowEmailPath:
          type: string
          description: |
            - NOT REQUIRED
      required:
        - namingBehavior
        - xml

    WorkflowDefinition:
      type: object
      allOf:
        - $ref: "#/components/schemas/WorkflowDefinitionProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    WorkflowDefinitionContainerProperties:
      type: object
      description: |
        - Properties for the Workflow Definition Container
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED
            - The array of children assets.

    WorkflowDefinitionContainer:
      type: object
      allOf:
        - $ref: "#/components/schemas/WorkflowDefinitionContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    WorkflowEmailProperties:
      type: object
      description: |
        - Properties for the Workflow Email
      properties:
        subject:
          type: string
          description: |
            - REQUIRED
            - The subject of this email
        body:
          type: string
          description: |
            - REQUIRED
            - The body of this email
      required:
        - subject
        - body

    WorkflowEmail:
      type: object
      allOf:
        - $ref: "#/components/schemas/WorkflowEmailProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    WorkflowEmailContainerProperties:
      type: object
      description: |
        - Properties for the Workflow Email Container
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/ContainerChildren"
          description: |
            - NOT REQUIRED
            - The array of children assets.

    WorkflowEmailContainer:
      type: object
      allOf:
        - $ref: "#/components/schemas/WorkflowEmailContainerProperties"
        - $ref: "#/components/schemas/ContaineredAsset"

    SiteProperties:
      type: object
      description: |
        - Properties for the Site
      properties:
        url:
          type: string
          description: |
            - REQUIRED: The site URL
        extensionsToStrip:
          type: string
          description: |
            - NOT REQUIRED: A comma-separated list of extensions that should be stripped from cross-site links pointing to assets in this site. Default: empty
        defaultMetadataSetId:
          type: string
          description: |
            - NOT REQUIRED: The default metadata set for the site by ID.
            - Priority: defaultMetadataSetId > defaultMetadataSetPath
        defaultMetadataSetPath:
          type: string
          description: |
            - NOT REQUIRED: The default metadata set for the site by path.
            - Priority: defaultMetadataSetId > defaultMetadataSetPath
        siteAssetFactoryContainerId:
          type: string
          description: |
            - NOT REQUIRED: Defines the site asset factory container relationship by ID.
            - Priority: siteAssetFactoryContainerId > siteAssetFactoryContainerPath
            - This asset factory container will determine which asset factories show on that user's dashboard under the "My New Content Wizards" section in the site.
        siteAssetFactoryContainerPath:
          type: string
          description: |
            - NOT REQUIRED: Defines the site asset factory container relationship by path.
            - Priority: siteAssetFactoryContainerId > siteAssetFactoryContainerPath
            - This asset factory container will determine which asset factories show on that user's dashboard under the "My New Content Wizards" section in the site.
        defaultEditorConfigurationId:
          type: string
          description: |
            - NOT REQUIRED: Default editor configuration by ID. Priority: defaultEditorConfigurationId > defaultEditorConfigurationPath
        defaultEditorConfigurationPath:
          type: string
          description: |
            - NOT REQUIRED: Default editor configuration by path.
        siteStartingPageId:
          type: string
          description: |
            - NOT REQUIRED: Defines the site starting page relationship by ID. Overrides the global starting page.
            - Priority: siteStartingPageId > siteStartingPagePath
            - This starting page will override the global starting page set in the system preferences
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin.
        siteStartingPagePath:
          type: string
          description: |
            - NOT REQUIRED: Defines the site starting page relationship by path. Overrides the global starting page. Only for non-recycled assets.
            - Priority: siteStartingPageId > siteStartingPagePath
            - This starting page will override the global starting page set in the system preferences
            - When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id in case if the selected asset gets restored from the recycle bin.
        siteStartingPageRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Indicates if the site starting page is recycled.
        roleAssignments:
          type: array
          items:
            $ref: "#/components/schemas/RoleAssignments"
          description: |
            - NOT REQUIRED: Role assignments for the site.
        usesScheduledPublishing:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether or not to publish this set on a schedule. Default: false
        scheduledPublishDestinationMode:
          $ref: "#/components/schemas/ScheduledDestinationMode"
          description: |
            - NOT REQUIRED: Scheduled publish destination selection mode.
        scheduledPublishDestinations:
          type: array
          items:
            $ref: "#/components/schemas/DestinationList"
          description: |
            - NOT REQUIRED: Destinations to be explicitly specified for scheduled publish.
            - Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
        timeToPublish:
          type: string
          default: 00:00
          description: |
            - NOT REQUIRED: The base time this set will be published. default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored
            - The base time this set will be published. For example, if one wanted this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter one of those times here and set the "publishInterval" to 4, and the "publishIntervalUnits" to "hours"
        publishIntervalHours:
          type: number
          minimum: 1
          maximum: 23
          description: |
            - Optional: Interval in hours for publishing. One of the choices for scheduled publishing.
            - Every how many hours the asset should be published. Can be between 1 and 23
        publishDaysOfWeek:
          type: array
          items:
            $ref: "#/components/schemas/DaysOfWeek"
          description: |
            - Optional: Days of the week for publishing. One of the choices for scheduled publishing.
            - Which days of the which the job should publish on - select all days to have a daily publish
        cronExpression:
          type: string
          description: |
            - Optional: Cron expression for scheduled publishing. One of the choices for scheduled publishing.
            - Applicable only if publishIntervalUnits is "cron" - only a valid Cron Expression will be accepted
        sendReportToUsers:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of user names for which this asset is available.
        sendReportToGroups:
          type: string
          description: |
            - NOT REQUIRED: Semicolon-delimited list of group names for which this asset is available.
        sendReportOnErrorOnly:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether to send a report only when there are errors. Default: false
        recycleBinExpiration:
          $ref: "#/components/schemas/RecycleBinExpiration"
          description: |
            - REQUIRED: The recycle bin expiration time.
        unpublishOnExpiration:
          type: boolean
          description: |
            - REQUIRED: Unpublish assets when moved to the expiration folder.
        linkCheckerEnabled:
          type: boolean
          description: |
            - REQUIRED: Generate broken link report on schedule.
        externalLinkCheckOnPublish:
          type: boolean
          description: |
            - REQUIRED: Check external links when publishing assets.
        inheritDataChecksEnabled:
          type: boolean
          description: |
            - REQUIRED
        spellCheckEnabled:
          type: boolean
          description: |
            - REQUIRED
        linkCheckEnabled:
          type: boolean
          description: |
            - REQUIRED
        accessibilityCheckEnabled:
          type: boolean
          description: |
            - REQUIRED
        inheritNamingRules:
          type: boolean
          description: |
            - REQUIRED: Determines whether naming rules are inherited from the system preferences.
            - If true, the rule properties will be ignored when saving, but old values are preserved.
            - Otherwise, null values will be defaulted to appropriate values when saving.
            - Naming rules read from a site may be null.
        namingRuleCase:
          $ref: "#/components/schemas/NamingRuleCase"
          description: |
            - Optional: Defines what case a name can be. Depends on inheritNamingRules.
        namingRuleSpacing:
          $ref: "#/components/schemas/NamingRuleSpacing"
          description: |
            - Optional: Defines how spaces are handled for names. Depends on inheritNamingRules.
        namingRuleAssets:
          $ref: "#/components/schemas/NamingRuleAssets"
          description: |
            - Optional: Defines the asset types that enforce naming rules. Depends on inheritNamingRules.
        accessibilityCheckerEnabled:
          type: boolean
          description: |
            - REQUIRED: Generate accessibility report on schedule.
        siteImproveIntegrationEnabled:
          type: boolean
          description: |
            - NOT REQUIRED: Enables Siteimprove integration.
        siteImproveUrl:
          type: string
          description: |
            - NOT REQUIRED: Alternative URL for Siteimprove.
        widenDamIntegrationEnabled:
          type: boolean
          description: |
            - NOT REQUIRED: Enables Widen Collective DAM integration.
        widenDamIntegrationCategory:
          type: string
          description: |
            - NOT REQUIRED: Widen Collective category for search results.
        webdamDamIntegrationEnabled:
          type: boolean
          description: |
            - NOT REQUIRED: Enables Webdam DAM integration.
        rootFolderId:
          type: string
          description: |
            - NOT REQUIRED: The root folder id, used only when reading a site. Ignored in other cases.
        rootAssetFactoryContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootPageConfigurationSetContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootContentTypeContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootConnectorContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootDataDefinitionContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootSharedFieldContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootMetadataSetContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootPublishSetContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootSiteDestinationContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootTransportContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootWorkflowDefinitionContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        rootWorkflowEmailContainerId:
          type: string
          description: |
            - NOT REQUIRED: Used only when reading a site. Ignored in other cases.
        linkRewriting:
          $ref: "#/components/schemas/LinkRewriting"
          default: "absolute"
          description: |
            - NOT REQUIRED: Default is "absolute".
      required:
        - url
        - recycleBinExpiration
        - unpublishOnExpiration
        - linkCheckerEnabled
        - externalLinkCheckOnPublish
        - inheritDataChecksEnabled
        - spellCheckEnabled
        - linkCheckEnabled
        - accessibilityCheckEnabled
        - inheritNamingRules
        - accessibilityCheckerEnabled

    Site:
      type: object
      allOf:
        - $ref: "#/components/schemas/SiteProperties"
        - $ref: "#/components/schemas/NamedAsset"

    EditorConfigurationProperties:
      type: object
      description: |
        - Properties for the Editor Configuration
      properties:
        siteId:
          type: string
          description: |
            - NOT REQUIRED: when referencing the System Default Editor Configuration (id=DEFAULT, name=Default)
            - One is REQUIRED for all other Editor Configurations
        siteName:
          type: string
          description: |
            - NOT REQUIRED: when referencing the System Default Editor Configuration (id=DEFAULT, name=Default)
            - One is REQUIRED for all other Editor Configurations
        cssFileId:
          type: string
          description: |
            - NOT REQUIRED:
            - Priority: cssFileId > cssFilePath
            - When editing and the selected asset is recycled, it is recommended to preserve this relationship by providing the selected asset's id in case if the selected asset gets restored from the recycle bin.
        cssFilePath:
          type: string
          description: |
            - NOT REQUIRED:
            - Priority: cssFileId > cssFilePath
            - Path works only for non-recycled assets
        cssFileRecycled:
          type: boolean
          description: |
            - NOT REQUIRED: For reading purposes only. Ignored when editing, copying, etc.
        configuration:
          type: string
          description: |
            - REQUIRED: JSON String for the configuration
      required:
        - configuration

    EditorConfiguration:
      allOf:
        - $ref: "#/components/schemas/EditorConfigurationProperties"
        - $ref: "#/components/schemas/NamedAsset"
      description: |
        - Composite type combining EditorConfigurationProperties and NamedAsset

    AssetProperties:
      type: object
      description: |
        - Properties for each asset type
        - Admin area assets require managerial or higher access, and no workflowConfiguration is needed for them.
      properties:
        workflowConfiguration:
          $ref: "#/components/schemas/WorkflowConfiguration"
          description: |
            - NOT REQUIRED
        feedBlock:
          $ref: "#/components/schemas/FeedBlock"
          description: |
            - One is REQUIRED
        indexBlock:
          $ref: "#/components/schemas/IndexBlock"
          description: |
            - One is REQUIRED
        textBlock:
          $ref: "#/components/schemas/TextBlock"
          description: |
            - One is REQUIRED
        xhtmlDataDefinitionBlock:
          $ref: "#/components/schemas/XhtmlDataDefinitionBlock"
          description: |
            - One is REQUIRED
        xmlBlock:
          $ref: "#/components/schemas/XmlBlock"
          description: |
            - One is REQUIRED
        file:
          $ref: "#/components/schemas/File"
          description: |
            - One is REQUIRED
        folder:
          $ref: "#/components/schemas/Folder"
          description: |
            - One is REQUIRED
        page:
          $ref: "#/components/schemas/Page"
          description: |
            - One is REQUIRED
        reference:
          $ref: "#/components/schemas/Reference"
          description: |
            - One is REQUIRED
        xsltFormat:
          $ref: "#/components/schemas/XsltFormat"
          description: |
            - One is REQUIRED
        scriptFormat:
          $ref: "#/components/schemas/ScriptFormat"
          description: |
            - One is REQUIRED
        symlink:
          $ref: "#/components/schemas/Symlink"
          description: |
            - One is REQUIRED
        template:
          $ref: "#/components/schemas/Template"
          description: |
            - One is REQUIRED
        user:
          $ref: "#/components/schemas/User"
          description: |
            - One is REQUIRED
        group:
          $ref: "#/components/schemas/Group"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        role:
          $ref: "#/components/schemas/Role"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        assetFactory:
          $ref: "#/components/schemas/AssetFactory"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        assetFactoryContainer:
          $ref: "#/components/schemas/AssetFactoryContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        contentType:
          $ref: "#/components/schemas/ContentType"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        contentTypeContainer:
          $ref: "#/components/schemas/ContentTypeContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        connectorContainer:
          $ref: "#/components/schemas/ConnectorContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        facebookConnector:
          $ref: "#/components/schemas/FacebookConnector"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        wordPressConnector:
          $ref: "#/components/schemas/WordPressConnector"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        googleAnalyticsConnector:
          $ref: "#/components/schemas/GoogleAnalyticsConnector"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        pageConfigurationSet:
          $ref: "#/components/schemas/PageConfigurationSet"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        pageConfigurationSetContainer:
          $ref: "#/components/schemas/PageConfigurationSetContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        dataDefinition:
          $ref: "#/components/schemas/DataDefinition"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        dataDefinitionContainer:
          $ref: "#/components/schemas/DataDefinitionContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        sharedField:
          $ref: "#/components/schemas/SharedField"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        sharedFieldContainer:
          $ref: "#/components/schemas/SharedFieldContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        metadataSet:
          $ref: "#/components/schemas/MetadataSet"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        metadataSetContainer:
          $ref: "#/components/schemas/MetadataSetContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        publishSet:
          $ref: "#/components/schemas/PublishSet"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        publishSetContainer:
          $ref: "#/components/schemas/PublishSetContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        target:
          $ref: "#/components/schemas/Target"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        siteDestinationContainer:
          $ref: "#/components/schemas/SiteDestinationContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        destination:
          $ref: "#/components/schemas/Destination"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        fileSystemTransport:
          $ref: "#/components/schemas/FileSystemTransport"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        ftpTransport:
          $ref: "#/components/schemas/FtpTransport"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        databaseTransport:
          $ref: "#/components/schemas/DatabaseTransport"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        cloudTransport:
          $ref: "#/components/schemas/CloudTransport"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        transportContainer:
          $ref: "#/components/schemas/TransportContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        workflowDefinition:
          $ref: "#/components/schemas/WorkflowDefinition"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        workflowDefinitionContainer:
          $ref: "#/components/schemas/WorkflowDefinitionContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        workflowEmail:
          $ref: "#/components/schemas/WorkflowEmail"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        workflowEmailContainer:
          $ref: "#/components/schemas/WorkflowEmailContainer"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        twitterFeedBlock:
          $ref: "#/components/schemas/TwitterFeedBlock"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        site:
          $ref: "#/components/schemas/Site"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
        editorConfiguration:
          $ref: "#/components/schemas/EditorConfiguration"
          description: |
            - One is REQUIRED
            - Admin area assets (must be manager or higher to access, no workflowConfiguration needed)
      oneOf:
        - required:
            - feedBlock
            - indexBlock
            - textBlock
            - xhtmlDataDefinitionBlock
            - xmlBlock
            - file
            - folder
            - page
            - reference
            - xsltFormat
            - scriptFormat
            - symlink
            - template
            - user
            - group
            - role
            - assetFactory
            - assetFactoryContainer
            - contentType
            - contentTypeContainer
            - connectorContainer
            - facebookConnector
            - wordPressConnector
            - googleAnalyticsConnector
            - pageConfigurationSet
            - pageConfigurationSetContainer
            - dataDefinition
            - dataDefinitionContainer
            - sharedField
            - sharedFieldContainer
            - metadataSet
            - metadataSetContainer
            - publishSet
            - publishSetContainer
            - target
            - siteDestinationContainer
            - destination
            - fileSystemTransport
            - ftpTransport
            - databaseTransport
            - cloudTransport
            - transportContainer
            - workflowDefinition
            - workflowDefinitionContainer
            - workflowEmail
            - workflowEmailContainer
            - twitterFeedBlock
            - site
            - editorConfiguration

    Asset:
      type: object
      properties:
        asset:
          $ref: "#/components/schemas/AssetProperties"
      required:
        - asset

    ReadRequest:
      type: object
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
      description: |
        - REQUIRED: Parameters used when reading an asset
      required:
        - authentication
        - identifier

    ReadResponseProperties:
      type: object
      description: |
        - Properties for the Read Response
      $ref: "#/components/schemas/Asset"
      required:
        - asset

    ReadResponse:
      type: object
      description: |
        - Combines OperationResult with ReadResponseProperties
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadResponseProperties"

    DeleteParametersProperties:
      type: object
      description: |
        - Properties for Delete Parameters
      properties:
        doWorkflow:
          type: boolean
          description: |
            - Determines if a workflow should be executed

    DeleteParameters:
      type: object
      description: |
        - Parameters used when deleting an asset
      allOf:
        - $ref: "#/components/schemas/UnpublishParameters"
        - $ref: "#/components/schemas/DeleteParametersProperties"

    RemoveRequest:
      type: object
      description: |
        - Request object for asset removal
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Parameters used when reading an asset
        workflowConfiguration:
          $ref: "#/components/schemas/WorkflowConfiguration"
          description: |
            - NOT REQUIRED: For configuring workflow
        deleteParameters:
          $ref: "#/components/schemas/DeleteParameters"
          description: |
            - NOT REQUIRED: Parameters used when deleting an asset
      required:
        - authentication
        - identifier

    RemoveResponse:
      $ref: "#/components/schemas/OperationResult"
      description: |
        - The response received after removing an asset

    EditRequest:
      type: object
      required:
        - authentication
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
      allOf:
        - $ref: "#/components/schemas/Asset"
      description: |
        - The request object for asset editing

    EditResponse:
      $ref: "#/components/schemas/OperationResult"
      description: |
        - The response received after editing an asset

    CreateRequest:
      type: object
      required:
        - authentication
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
      allOf:
        - $ref: "#/components/schemas/Asset"
      description: |
        - The request object for asset creating

    CreateResponseProperties:
      type: object
      description: |
        - Properties for Create Response
      properties:
        createdAssetId:
          type: string
          description: |
            - The id of the asset created

    CreateResponse:
      type: object
      description: |
        - Combines OperationResult with CreateResponseProperties
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/CreateResponseProperties"

    MoveParametersProperties:
      type: object
      description: |
        - Properties for Move Parameters
      properties:
        destinationContainerIdentifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - NOT REQUIRED: The container into which the asset will be moved. If left empty, the asset will remain in its current container
        doWorkflow:
          type: boolean
          description: |
            - Determines if a workflow should be executed
        newName:
          type: string
          description: |
            - NOT REQUIRED: Name to give the asset. If left empty, the asset's name will not be changed

    MoveParameters:
      type: object
      description: |
        - Combines UnpublishParameters with MoveParametersProperties
      allOf:
        - $ref: "#/components/schemas/UnpublishParameters"
        - $ref: "#/components/schemas/MoveParametersProperties"

    MoveRequest:
      type: object
      description: |
        - Request object for moving an asset
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Parameters used when reading an asset
        workflowConfiguration:
          $ref: "#/components/schemas/WorkflowConfiguration"
          description: |
            - NOT REQUIRED: For configuring workflow
        moveParameters:
          $ref: "#/components/schemas/MoveParameters"
      required:
        - authentication
        - identifier

    MoveResponse:
      $ref: "#/components/schemas/OperationResult"
      description: |
        - The response received after moving an asset

    SearchFieldString:
      type: string
      enum:
        - name
        - path
        - createdBy
        - modifiedBy
        - displayName
        - title
        - summary
        - teaser
        - keywords
        - description
        - author
        - blob
        - velocityFormatContent
        - xml
        - link
      description: |
        - Asset fields to search (e.g. name, title, content), see searchField simpleType for valid values

    SearchFields:
      $ref: "#/components/schemas/SearchFieldString"

    SearchTypes:
      $ref: "#/components/schemas/EntityTypeString"

    SearchInformation:
      type: object
      description: |
        - Properties for the Search Information
      required:
        - searchTerms
      properties:
        searchTerms:
          type: string
          description: |
            - The search terms to use for the search query.
        siteId:
          type: string
          description: |
            - NOT REQUIRED
            - Id of the site to search. If left blank, all sites will be searched.
        siteName:
          type: string
          description: |
            - NOT REQUIRED
            - Name of the site to search. If left blank, all sites will be searched.
        searchFields:
          type: array
          items:
            $ref: "#/components/schemas/SearchFields"
          description: |
            - NOT REQUIRED
            - Asset fields to search (e.g. name, title, content).
        searchTypes:
          type: array
          items:
            $ref: "#/components/schemas/SearchTypes"
          description: |
            - NOT REQUIRED
            - Asset types to search (e.g. page, folder, site). If left blank, all asset types will be searched.

    SearchRequest:
      type: object
      description: |
        - Properties for the Search Request
      required:
        - authentication
        - searchInformation
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        searchInformation:
          $ref: "#/components/schemas/SearchInformation"

    SearchMatches:
      $ref: "#/components/schemas/Identifier"

    SearchResult:
      type: object
      description: |
        - Properties for the Search Result
      required:
        - matches
      properties:
        matches:
          type: array
          items:
            $ref: "#/components/schemas/SearchMatches"
          description: |
            - The resulting found asset identifiers

    SearchResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/SearchResult"

    CopyParameters:
      type: object
      description: |
        - Properties for the Copy Parameters
      required:
        - destinationContainerIdentifier
        - doWorkflow
        - newName
      properties:
        destinationContainerIdentifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - The identifier for the destination container where the asset will be copied to.
        doWorkflow:
          type: boolean
          description: |
            - Indicates whether a workflow should be initiated after the copy operation.
        newName:
          type: string
          description: |
            - The new name for the copied asset.

    CopyRequest:
      type: object
      description: |
        - Properties for the Copy Request
      required:
        - authentication
        - identifier
        - copyParameters
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - The identifier of the asset to be copied.
        copyParameters:
          $ref: "#/components/schemas/CopyParameters"
        workflowConfiguration:
          $ref: "#/components/schemas/WorkflowConfiguration"
          description: |
            - NOT REQUIRED
            - The configuration for any workflow that needs to be applied after the copy.

    CopyResponse:
      $ref: "#/components/schemas/OperationResult"

    SiteCopyRequest:
      type: object
      description: |
        - Properties for the SiteCopy Request
      required:
        - authentication
        - newSiteName
      oneOf:
        - required:
            - originalSiteId
            - originalSiteName
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        originalSiteId:
          type: string
          description: |
            - NOT REQUIRED
            - The ID of the site to be copied. Takes precedence over originalSiteName if both are provided.
            - One is REQUIRED (either originalSiteId or originalSiteName)
        originalSiteName:
          type: string
          description: |
            - NOT REQUIRED
            - The name of the site to be copied.
            - One is REQUIRED (either originalSiteId or originalSiteName)
        newSiteName:
          type: string
          description: |
            - REQUIRED: The name for the new site that will be created from the copy.

    SiteCopyResponse:
      $ref: "#/components/schemas/OperationResult"

    ReadAccessRightsRequest:
      type: object
      description: |
        - Properties for the ReadAccessRights Request
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Parameters used when reading an asset

    ReadAccessRightsResult:
      type: object
      properties:
        accessRightsInformation:
          $ref: "#/components/schemas/AccessRightsInformation"

    ReadAccessRightsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadAccessRightsResult"

    EditAccessRightsRequest:
      type: object
      required:
        - authentication
        - accessRightsInformation
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        accessRightsInformation:
          $ref: "#/components/schemas/AccessRightsInformation"
          description: |
            - REQUIRED: Complete information about the access rights of an asset or component.
        applyToChildren:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Indicates whether to apply the access rights to children.
            - This property is not required for non-folders and non-containers.

    EditAccessRightsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    ReadWorkflowSettingsRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Parameters used when reading an asset.

    ReadWorkflowSettingsResult:
      type: object
      required:
        - workflowSettings
      properties:
        workflowSettings:
          $ref: "#/components/schemas/WorkflowSettings"
          description: |
            - REQUIRED: A result of reading the workflow information of a folder.

    ReadWorkflowSettingsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadWorkflowSettingsResult"

    EditWorkflowSettingsRequest:
      type: object
      required:
        - authentication
        - workflowSettings
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        workflowSettings:
          $ref: "#/components/schemas/WorkflowSettings"
          description: |
            - REQUIRED: The workflow settings to be edited.
        applyInheritWorkflowsToChildren:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Determines whether to apply the 'inheritWorkflows' settings to children folders.
        applyRequireWorkflowToChildren:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Determines whether to apply the 'requireWorkflow' settings to children folders.

    EditWorkflowSettingsResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    ListSubscribersRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Parameters used when reading an asset.

    ListSubscribersResult:
      type: object
      required:
        - subscribers
        - manualSubscribers
      properties:
        subscribers:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - REQUIRED: A list of asset identifiers that are subscribed.
        manualSubscribers:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - REQUIRED: A list of asset identifiers that are manually subscribed.

    ListSubscribersResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ListSubscribersResult"

    ListMessagesRequest:
      type: object
      required:
        - authentication
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"

    MessageProperties:
      type: object
      required:
        - to
        - subject
        - body
      properties:
        to:
          type: string
          description: |
            - REQUIRED: Who the message was/will be sent to.
        from:
          type: string
          description: |
            - NOT REQUIRED: Who sent the message. Not necessary when sending a message.
        subject:
          type: string
          description: |
            - REQUIRED: The subject of the message.
        date:
          type: string
          description: |
            - NOT REQUIRED: The date the message was sent. Not necessary when sending a message.
        body:
          type: string
          description: |
            - REQUIRED: The body of the message.

    Message:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseAsset"
        - $ref: "#/components/schemas/MessageProperties"
      description: |
        - Represents a message within the system

    MessagesList:
      type: object
      allOf:
        - $ref: "#/components/schemas/Message"

    ListMessagesResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessagesList"
          description: |
            - NOT REQUIRED: A list of messages.

    ListMessagesResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ListMessagesResult"

    MessageMarkType:
      type: string
      enum: ["read", "unread"]
      description: |
        - For marking messages - read or unread

    MarkMessageRequest:
      type: object
      required:
        - authentication
        - identifier
        - markType
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the message.
        markType:
          $ref: "#/components/schemas/MessageMarkType"
          description: |
            - REQUIRED: The type of mark to apply to the message.
            - For marking messages - read or unread

    MarkMessageResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    DeleteMessageRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the message.

    DeleteMessageResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    CheckOutRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the message.

    CheckOutResult:
      type: object
      properties:
        workingCopyIdentifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - NOT REQUIRED: Identifier for the working copy.

    CheckOutResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/CheckOutResult"

    CheckInRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the message.

    CheckInResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    ListSitesRequest:
      type: object
      required:
        - authentication
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"

    ListSitesResult:
      type: object
      required:
        - sites
      properties:
        sites:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - REQUIRED: The identifiers for the sites.

    ListSitesResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ListSitesResult"

    AuditTypes:
      type: string
      enum:
        - login
        - login_failed
        - logout
        - start_workflow
        - advance_workflow
        - edit
        - copy
        - create
        - reference
        - delete
        - delete_unpublish
        - check_in
        - check_out
        - activate_version
        - publish
        - unpublish
        - recycle
        - restore
        - move
      description: |
        - Represents the different kinds of audits in the system.

    AuditParameters:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - NOT REQUIRED: Filter the assets by a certain entity.
        username:
          type: string
          description: |
            - NOT REQUIRED: Filter the audits by a given user name.
        groupname:
          type: string
          description: |
            - NOT REQUIRED: Filter the audits by a given group name. The audits for all users in the group will be returned.
        rolename:
          type: string
          description: |
            - NOT REQUIRED: Filter the audits by a given role.
        startDate:
          type: string
          description: |
            - NOT REQUIRED: Filter the audits by a start time. Only audits for events that happened after this time will be included.
        endDate:
          type: string
          description: |
            - NOT REQUIRED: Filter the audits by an end time. Only audits for events that happened before this time will be included.
        auditType:
          $ref: "#/components/schemas/AuditTypes"
          description: |
            - NOT REQUIRED: Filter the audits by an audit type. Only audits of this type will be returned in the response.

    ReadAuditsRequest:
      type: object
      required:
        - authentication
        - auditParameters
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        auditParameters:
          $ref: "#/components/schemas/AuditParameters"
          description: |
            - REQUIRED: The parameters for the audit.

    Audit:
      type: object
      required:
        - user
        - action
        - date
      properties:
        user:
          type: string
          description: |
            - REQUIRED: The user that performed the audited action.
        action:
          $ref: "#/components/schemas/AuditTypes"
          description: |
            - REQUIRED: The type of action the user performed.
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - NOT REQUIRED: The identifier identifying the asset the action was performed on, if any.
        date:
          type: string
          description: |
            - REQUIRED: The date and time the action was performed.

    Audits:
      type: array
      items:
        $ref: "#/components/schemas/Audit"

    ReadAuditsResult:
      type: object
      required:
        - audits
      properties:
        audits:
          type: array
          items:
            $ref: "#/components/schemas/Audits"
          description: |
            - REQUIRED: Represents the audits in the system.

    ReadAuditsResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadAuditsResult"

    ReadWorkflowInformationRequest:
      type: object
      required:
        - authentication
        - identifier
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier for the message.

    WorkflowAction:
      type: object
      required:
        - identifier
        - label
        - actionType
        - nextId
      properties:
        identifier:
          type: string
          description: |
            - REQUIRED: The unique name of this action.
        label:
          type: string
          description: |
            - REQUIRED: The display label for this action.
        actionType:
          type: string
          description: |
            - REQUIRED: The type of action: reverse, forward, next-id.
        nextId:
          type: string
          description: |
            - REQUIRED: The id of the step that will result when this action is chosen by the user.

    WorkflowActions:
      type: array
      items:
        $ref: "#/components/schemas/WorkflowAction"

    WorkflowStep:
      type: object
      required:
        - identifier
        - label
        - stepType
        - owner
      properties:
        identifier:
          type: string
          description: |
            - REQUIRED: The unique name of this step.
        label:
          type: string
          description: |
            - REQUIRED: The display label for this step.
        stepType:
          type: string
          description: |
            - REQUIRED: The type of step ("system", "edit", or "transition").
        owner:
          type: string
          description: |
            - REQUIRED: The owner (user or group name) of this step.
        actions:
          $ref: "#/components/schemas/WorkflowActions"
          description: |
            - NOT REQUIRED: The actions this step contains.

    WorkflowSteps:
      allOf:
        - $ref: "#/components/schemas/WorkflowStep"

    WorkflowProperties:
      type: object
      description: |
        - Represents a workflow instance's properties in progress.
      required:
        - relatedEntity
        - currentStep
      properties:
        relatedEntity:
          type: string
          description: |
            - REQUIRED: The asset that is in this workflow.
        currentStep:
          type: string
          description: |
            - REQUIRED: The current step this workflow is at.
        orderedSteps:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowSteps"
          description: |
            - NOT REQUIRED: The ordered steps of this workflow.
        unorderedSteps:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowSteps"
          description: |
            - NOT REQUIRED: The unordered steps of this workflow.
        startDate:
          type: string
          description: |
            - NOT REQUIRED: The date when the workflow was initialized.
        endDate:
          type: string
          description: |
            - NOT REQUIRED: The due date of the workflow.
        completedWorkflowEmailId:
          type: string
          description: |
            - NOT REQUIRED: Custom workflow email to send when email trigger set to completed.
        completedWorkflowEmailPath:
          type: string
          description: |
            - NOT REQUIRED: Custom workflow email to send when email trigger set to completed.
        notificationWorkflowEmailId:
          type: string
          description: |
            - NOT REQUIRED: Custom workflow email to send when email trigger set to notify.
        notificationWorkflowEmailPath:
          type: string
          description: |
            - NOT REQUIRED: Custom workflow email to send when email trigger set to notify.

    Workflow:
      allOf:
        - $ref: "#/components/schemas/NamedAsset"
        - $ref: "#/components/schemas/WorkflowProperties"

    ReadWorkflowInformationResult:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
          description: |
            - NOT REQUIRED: The workflow information.

    ReadWorkflowInformationResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadWorkflowInformationResult"

    WorkflowTransitionInformation:
      type: object
      required:
        - workflowId
        - actionIdentifier
      properties:
        workflowId:
          type: string
          description: |
            - REQUIRED: The id of the workflow to perform the transition on.
        actionIdentifier:
          type: string
          description: |
            - REQUIRED: The identifier of the action to transition to.
        transitionComment:
          type: string
          description: |
            - NOT REQUIRED: The user's comment about the transition taken.

    PerformWorkflowTransitionRequest:
      type: object
      required:
        - authentication
        - workflowTransitionInformation
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        workflowTransitionInformation:
          $ref: "#/components/schemas/WorkflowTransitionInformation"
          description: |
            - REQUIRED: Information related to the workflow transition.

    PerformWorkflowTransitionResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"

    ReadPreferencesRequest:
      type: object
      required:
        - authentication
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"

    Preference:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: |
            - REQUIRED: The name of the preference.
        value:
          type: string
          description: |
            - REQUIRED: The value of the preference.

    PreferencesList:
      allOf:
        - $ref: "#/components/schemas/Preference"

    ReadPreferencesResult:
      type: object
      properties:
        preferences:
          type: array
          items:
            $ref: "#/components/schemas/PreferencesList"
      required:
        - preferences

    ReadPreferencesResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"
        - $ref: "#/components/schemas/ReadPreferencesResult"

    PublishInformation:
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdentifiers"
          description: |
            - NOT REQUIRED: Destinations to which the asset should be published.
            - This field is ignored when identifier points to a Destination.
            - Publishing an asset that does not allow you to select Destinations in the Cascade UI (Publish Set or Target) *will* respect the Destinations supplied here (this is an inconsistency between the UI and web services).
            - Supplying an empty set of identifiers will publish to all Destinations that are enabled and applicable for the user making the web services call.
        unpublish:
          type: boolean
          default: false
          description: |
            - NOT REQUIRED: Whether to unpublish the asset instead of publishing it.
            - Similar to the GUI - you can choose to unpublish the asset instead of publishing it.
        publishRelatedAssets:
          type: boolean
          description: |
            - NOT REQUIRED: Whether to publish related assets.
        publishRelatedPublishSet:
          type: boolean
          description: |
            - NOT REQUIRED: Whether to publish related publish sets.
        scheduledDate:
          type: string
          description: |
            - NOT REQUIRED: The scheduled date for publishing the asset.

    PublishUnpublishRequest:
      type: object
      required:
        - authentication
        - identifier
        - publishInformation
      properties:
        authentication:
          $ref: "#/components/schemas/Authentication"
        identifier:
          $ref: "#/components/schemas/Identifier"
          description: |
            - REQUIRED: Identifier of the asset being published.
        publishInformation:
          $ref: "#/components/schemas/PublishInformation"
          description: |
            - REQUIRED: Information related to the publishing or unpublishing.

    PublishUnpublishResponse:
      allOf:
        - $ref: "#/components/schemas/OperationResult"

paths:
  /read/{type}/{id}:
    get:
      description: |
        Example: `https://{yourOrg}.cascadecms.com/api/v1/read/page/www.example.com/news/2003/best-of-show?u=hill&p=hill`
      tags:
        - Examples
      operationId: readNoPath
      summary: Read resource by type and ID
      parameters:
        - name: u
          in: query
          required: true
          description: Username
          schema:
            type: string
            example: hill
        - name: p
          in: query
          required: true
          description: Password
          schema:
            type: string
            example: hill
        - name: type
          in: path
          required: true
          description: Type of the resource (e.g., "folder", "page").
          schema:
            type: string
            example: folder
        - name: id
          in: path
          required: true
          description: Id of the resource.
          schema:
            type: string
            example: 2b2fd9bc7f0000010044b22e65131cd3
  /read/{type}/{siteName}/{path}:
    get:
      description: "This is an example read operation"
      tags:
        - Examples
      operationId: readWithPath
      summary: Read resource by type, site name, and path
      parameters:
        - name: type
          in: path
          required: true
          description: Type of the resource (e.g., "folder", "page").
          schema:
            type: string
        - name: siteName
          in: path
          required: true
          description: Name of the site.
          schema:
            type: string
        - name: path
          in: path
          required: true
          description: Path to the resource within the site.
          schema:
            type: string
  /read:
    post:
      description: Use this method to read an asset
      tags:
        - POST Only
      operationId: read
      summary: "Read an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse"
  /delete:
    post:
      description: Use this method to delete an asset
      tags:
        - POST Only
      operationId: delete
      summary: "Remove an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveResponse"

  /edit:
    post:
      description: Use this method to edit an asset
      tags:
        - POST Only
      operationId: edit
      summary: "Edit an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditResponse"

  /create:
    post:
      description: Use this method to create an asset
      tags:
        - POST Only
      operationId: create
      summary: "Create an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse"

  /move:
    post:
      description: Use this method to move an asset
      tags:
        - POST Only
      operationId: move
      summary: "Move an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoveResponse"

  /search:
    post:
      description: Use this method to search for assets
      tags:
        - POST Only
      operationId: search
      summary: "Search for assets"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"

  /copy:
    post:
      description: Use this method to copy an asset
      tags:
        - POST Only
      operationId: copy
      summary: "Copy an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyResponse"

  /siteCopy:
    post:
      description: Use this method to copy a site
      tags:
        - POST Only
      operationId: siteCopy
      summary: "Copy a site"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteCopyRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCopyResponse"

  /readAccessRights:
    post:
      description: Use this method to read access rights
      tags:
        - POST Only
      operationId: readAccessRights
      summary: "Read access rights of an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadAccessRightsRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadAccessRightsResponse"

  /editAccessRights:
    post:
      description: Use this method to edit access rights
      tags:
        - POST Only
      operationId: editAccessRights
      summary: "Edit access rights of an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditAccessRightsRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditAccessRightsResponse"

  /readWorkflowSettings:
    post:
      description: Use this method to read workflow settings
      tags:
        - POST Only
      operationId: readWorkflowSettings
      summary: "Read workflow settings of an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadWorkflowSettingsRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadWorkflowSettingsResponse"

  /editWorkflowSettings:
    post:
      description: Use this method to edit workflow settings
      tags:
        - POST Only
      operationId: editWorkflowSettings
      summary: "Edit workflow settings of an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditWorkflowSettingsRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditWorkflowSettingsResponse"

  /listSubscribers:
    post:
      description: Use this method to list subscribers of an asset
      tags:
        - POST Only
      operationId: listSubscribers
      summary: "List subscribers of an asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSubscribersRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSubscribersResponse"

  /listMessages:
    post:
      description: Use this method to read a list of messages
      tags:
        - POST Only
      operationId: listMessages
      summary: "List messages"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListMessagesRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMessagesResponse"

  /markMessage:
    post:
      description: Use this method to mark messages read or unread
      tags:
        - POST Only
      operationId: markMessage
      summary: "Mark a message as read or unread"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarkMessageRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarkMessageResponse"

  /deleteMessage:
    post:
      description: Use this method to delete a message
      tags:
        - POST Only
      operationId: deleteMessage
      summary: "Delete a message"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMessageRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMessageResponse"

  /checkOut:
    post:
      description: Use this method to checkout an asset
      tags:
        - POST Only
      operationId: checkOut
      summary: "Check out an asset for editing"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckOutRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckOutResponse"

  /checkIn:
    post:
      description: Use this method to check in an asset
      tags:
        - POST Only
      operationId: checkIn
      summary: "Check in an edited asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckInRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckInResponse"

  /listSites:
    post:
      description: Use this method to list existing sites
      tags:
        - POST Only
      operationId: listSites
      summary: "List all sites"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSitesRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSitesResponse"

  /readAudits:
    post:
      description: Use this method to read audits of an asset
      tags:
        - POST Only
      operationId: readAudits
      summary: "Read audit records"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadAuditsRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadAuditsResponse"

  /readWorkflowInformation:
    post:
      description: Use this method to read workflow information
      tags:
        - POST Only
      operationId: readWorkflowInformation
      summary: "Read Workflow Information"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadWorkflowInformationRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadWorkflowInformationResponse"

  /performWorkflowTransition:
    post:
      description: Use this method to perform a workflow
      tags:
        - POST Only
      operationId: performWorkflowTransition
      summary: "Perform Workflow Transition"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PerformWorkflowTransitionRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerformWorkflowTransitionResponse"

  /readPreferences:
    post:
      description: Use this method to view read preferences
      tags:
        - POST Only
      operationId: readPreferences
      summary: "Read Preferences"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadPreferencesRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadPreferencesResponse"

  /publish:
    post:
      description: Use this method to publish or unpublish an asset
      tags:
        - POST Only
      operationId: publish
      summary: "Publish or Unpublish Asset"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishUnpublishRequest"
      responses:
        "400":
          description: |
            - Bad Request
        "200":
          description: |
            - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishUnpublishResponse"
